{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse, type NextRequest } from 'next/server'\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  const response = NextResponse.next({\r\n    request: {\r\n      headers: request.headers,\r\n    },\r\n  })\r\n\r\n  // If the request is for an auth route, redirect to dashboard\r\n  if (isAuthRoute(request.nextUrl.pathname)) {\r\n    return NextResponse.redirect(new URL('/', request.url));\r\n  }\r\n\r\n  return response;\r\n}\r\n\r\n// Auth routes that should not be accessible\r\nfunction isAuthRoute(pathname: string): boolean {\r\n  return pathname.startsWith('/auth/');\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public folder\r\n     */\r\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\r\n  ],\r\n} "],"names":[],"mappings":";;;;AAAA;AAAA;;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,WAAW,qLAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACjC,SAAS;YACP,SAAS,QAAQ,OAAO;QAC1B;IACF;IAEA,6DAA6D;IAC7D,IAAI,YAAY,QAAQ,OAAO,CAAC,QAAQ,GAAG;QACzC,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO;AACT;AAEA,4CAA4C;AAC5C,SAAS,YAAY,QAAgB;IACnC,OAAO,SAAS,UAAU,CAAC;AAC7B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}