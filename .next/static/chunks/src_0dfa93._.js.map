{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/app/actions/stockActions.ts"],"sourcesContent":["'use server';\r\n\r\nimport yahooFinance from 'yahoo-finance2';\r\n\r\n// Configure yahoo-finance2\r\nyahooFinance.setGlobalConfig({\r\n  queue: {\r\n    concurrency: 5,\r\n    timeout: 30000,\r\n  },\r\n});\r\n\r\nexport interface StockQuote {\r\n  symbol: string;\r\n  name: string;\r\n  price: number;\r\n  change: number;\r\n  changePercentage: number;\r\n  volume: number;\r\n  marketCap: number;\r\n}\r\n\r\nexport interface HistoricalData {\r\n  date: Date;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n}\r\n\r\nexport interface SearchResult {\r\n  symbol: string;\r\n  shortname?: string;\r\n  longname?: string;\r\n  exchange: string;\r\n  typeDisp: string;\r\n  quoteType: string;\r\n}\r\n\r\nexport async function getStockQuote(symbol: string): Promise<StockQuote> {\r\n  try {\r\n    // Add retry logic and better error handling\r\n    let retries = 3;\r\n    // Error tracking removed for cleaner code\r\n\r\n    while (retries > 0) {\r\n      try {\r\n        const quote = await yahooFinance.quote(symbol, {\r\n          fields: [\r\n            'symbol',\r\n            'longName',\r\n            'shortName',\r\n            'regularMarketPrice',\r\n            'regularMarketChange',\r\n            'regularMarketChangePercent',\r\n            'regularMarketVolume',\r\n            'marketCap'\r\n          ]\r\n        });\r\n\r\n        if (!quote) {\r\n          throw new Error(`No data received for ${symbol}`);\r\n        }\r\n\r\n        return {\r\n          symbol: quote.symbol || symbol,\r\n          name: quote.longName || quote.shortName || symbol,\r\n          price: Number(quote.regularMarketPrice) || 0,\r\n          change: Number(quote.regularMarketChange) || 0,\r\n          changePercentage: Number(quote.regularMarketChangePercent) || 0,\r\n          volume: Number(quote.regularMarketVolume) || 0,\r\n          marketCap: Number(quote.marketCap) || 0,\r\n        };\r\n      } catch (error) {\r\n        // Error logged for debugging\r\n        retries--;\r\n        \r\n        if (retries > 0) {\r\n          // Wait before retrying\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n    }\r\n\r\n    // If all retries failed, return a fallback quote\r\n    console.warn(`Failed to fetch quote for ${symbol} after retries, using fallback data`);\r\n    return {\r\n      symbol: symbol,\r\n      name: symbol,\r\n      price: 0,\r\n      change: 0,\r\n      changePercentage: 0,\r\n      volume: 0,\r\n      marketCap: 0,\r\n    };\r\n  } catch (error) {\r\n    console.error(`Error fetching quote for ${symbol}:`, error);\r\n    // Return fallback data instead of throwing\r\n    return {\r\n      symbol: symbol,\r\n      name: symbol,\r\n      price: 0,\r\n      change: 0,\r\n      changePercentage: 0,\r\n      volume: 0,\r\n      marketCap: 0,\r\n    };\r\n  }\r\n}\r\n\r\nexport async function getHistoricalData(\r\n  symbol: string,\r\n  period: '1d' | '5d' | '1mo' | '3mo' | '6mo' | '1y' = '1mo'\r\n): Promise<HistoricalData[]> {\r\n  try {\r\n    // Using chart instead of historical as recommended\r\n    const result = await yahooFinance.chart(symbol, {\r\n      period1: getStartDate(period),\r\n      period2: new Date(),\r\n      interval: '1d',\r\n      includePrePost: false,\r\n    });\r\n\r\n    if (!result.quotes || result.quotes.length === 0) {\r\n      throw new Error(`No historical data received for ${symbol}`);\r\n    }\r\n\r\n    return result.quotes.map(quote => ({\r\n      date: quote.date,\r\n      open: Number(quote.open) || 0,\r\n      high: Number(quote.high) || 0,\r\n      low: Number(quote.low) || 0,\r\n      close: Number(quote.close) || 0,\r\n      volume: Number(quote.volume) || 0,\r\n    }));\r\n  } catch (error) {\r\n    console.error(`Error fetching historical data for ${symbol}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function searchStocks(query: string): Promise<SearchResult[]> {\r\n  try {\r\n    const results = await yahooFinance.search(query);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return results.quotes\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      .filter((quote: any) => \r\n        quote.quoteType === 'EQUITY' || quote.quoteType === 'ETF'\r\n      )\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      .map((quote: any) => ({\r\n        symbol: quote.symbol || '',\r\n        shortname: quote.shortname,\r\n        longname: quote.longname,\r\n        exchange: quote.exchange || '',\r\n        typeDisp: quote.typeDisp || '',\r\n        quoteType: quote.quoteType || '',\r\n      }));\r\n  } catch (error) {\r\n    console.error(`Error searching stocks with query ${query}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getTrendingStocks(): Promise<StockQuote[]> {\r\n  // FAANG + Popular tech stocks\r\n  const trendingSymbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA', 'NFLX'];\r\n  \r\n  try {\r\n    const quotes = await Promise.all(\r\n      trendingSymbols.map(async symbol => {\r\n        try {\r\n          return await getStockQuote(symbol);\r\n        } catch (error) {\r\n          console.error(`Error fetching ${symbol}:`, error);\r\n          // Return a placeholder if individual stock fetch fails\r\n          return {\r\n            symbol,\r\n            name: symbol,\r\n            price: 0,\r\n            change: 0,\r\n            changePercentage: 0,\r\n            volume: 0,\r\n            marketCap: 0\r\n          };\r\n        }\r\n      })\r\n    );\r\n    \r\n    // Filter out any failed fetches that returned placeholder data\r\n    const validQuotes = quotes.filter(quote => quote.price > 0);\r\n    \r\n    if (validQuotes.length === 0) {\r\n      throw new Error('Failed to fetch any valid stock data');\r\n    }\r\n    \r\n    return validQuotes;\r\n  } catch (error) {\r\n    console.error('Error fetching trending stocks:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getDailyGainers(): Promise<StockQuote[]> {\r\n  // Popular stocks that typically have significant daily movements\r\n  const gainerSymbols = ['NVDA', 'AMD', 'TSLA', 'META', 'NFLX', 'CRM', 'ADBE', 'PYPL'];\r\n  \r\n  try {\r\n    const quotes = await Promise.all(\r\n      gainerSymbols.map(async symbol => {\r\n        try {\r\n          return await getStockQuote(symbol);\r\n        } catch (error) {\r\n          console.error(`Error fetching ${symbol}:`, error);\r\n          return {\r\n            symbol,\r\n            name: symbol,\r\n            price: 0,\r\n            change: 0,\r\n            changePercentage: 0,\r\n            volume: 0,\r\n            marketCap: 0\r\n          };\r\n        }\r\n      })\r\n    );\r\n    \r\n    const validQuotes = quotes.filter(quote => quote.price > 0);\r\n    \r\n    // Sort by percentage gain (highest first)\r\n    return validQuotes\r\n      .filter(quote => quote.changePercentage > 0)\r\n      .sort((a, b) => b.changePercentage - a.changePercentage)\r\n      .slice(0, 6); // Return top 6 gainers\r\n  } catch (error) {\r\n    console.error('Error fetching daily gainers:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getDailyLosers(): Promise<StockQuote[]> {\r\n  // Popular stocks that typically have significant daily movements\r\n  const loserSymbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA', 'NFLX'];\r\n  \r\n  try {\r\n    const quotes = await Promise.all(\r\n      loserSymbols.map(async symbol => {\r\n        try {\r\n          return await getStockQuote(symbol);\r\n        } catch (error) {\r\n          console.error(`Error fetching ${symbol}:`, error);\r\n          return {\r\n            symbol,\r\n            name: symbol,\r\n            price: 0,\r\n            change: 0,\r\n            changePercentage: 0,\r\n            volume: 0,\r\n            marketCap: 0\r\n          };\r\n        }\r\n      })\r\n    );\r\n    \r\n    const validQuotes = quotes.filter(quote => quote.price > 0);\r\n    \r\n    // Sort by percentage loss (lowest first)\r\n    return validQuotes\r\n      .filter(quote => quote.changePercentage < 0)\r\n      .sort((a, b) => a.changePercentage - b.changePercentage)\r\n      .slice(0, 6); // Return top 6 losers\r\n  } catch (error) {\r\n    console.error('Error fetching daily losers:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Helper function to calculate start date based on period\r\nfunction getStartDate(period: '1d' | '5d' | '1mo' | '3mo' | '6mo' | '1y'): Date {\r\n  const now = new Date();\r\n  switch (period) {\r\n    case '1d':\r\n      return new Date(now.setDate(now.getDate() - 1));\r\n    case '5d':\r\n      return new Date(now.setDate(now.getDate() - 5));\r\n    case '1mo':\r\n      return new Date(now.setMonth(now.getMonth() - 1));\r\n    case '3mo':\r\n      return new Date(now.setMonth(now.getMonth() - 3));\r\n    case '6mo':\r\n      return new Date(now.setMonth(now.getMonth() - 6));\r\n    case '1y':\r\n      return new Date(now.setFullYear(now.getFullYear() - 1));\r\n    default:\r\n      return new Date(now.setMonth(now.getMonth() - 1));\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;IAwCsB;IAuEA;IA+BA;IAwBA;IAuCA;IAqCA"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/SearchBar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Search, X, TrendingUp } from \"lucide-react\";\r\nimport { searchStocks, SearchResult } from \"@/app/actions/stockActions\";\r\n\r\ninterface SearchBarProps {\r\n  onStockSelect?: (symbol: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nexport function SearchBar({ onStockSelect, placeholder = \"Search stocks...\" }: SearchBarProps) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState<SearchResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const searchRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Popular stocks for quick access\r\n  const popularStocks = [\r\n    { symbol: \"AAPL\", name: \"Apple Inc.\" },\r\n    { symbol: \"MSFT\", name: \"Microsoft Corporation\" },\r\n    { symbol: \"GOOGL\", name: \"Alphabet Inc.\" },\r\n    { symbol: \"AMZN\", name: \"Amazon.com Inc.\" },\r\n    { symbol: \"META\", name: \"Meta Platforms Inc.\" },\r\n    { symbol: \"TSLA\", name: \"Tesla Inc.\" },\r\n    { symbol: \"NVDA\", name: \"NVIDIA Corporation\" },\r\n    { symbol: \"NFLX\", name: \"Netflix Inc.\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {\r\n        setShowResults(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchTimeout = setTimeout(async () => {\r\n      if (query.trim().length >= 2) {\r\n        setIsLoading(true);\r\n        try {\r\n          const searchResults = await searchStocks(query);\r\n          setResults(searchResults.slice(0, 10)); // Limit to 10 results\r\n          setShowResults(true);\r\n        } catch (error) {\r\n          console.error(\"Search error:\", error);\r\n          setResults([]);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      } else {\r\n        setResults([]);\r\n        setShowResults(false);\r\n      }\r\n    }, 300); // Debounce search\r\n\r\n    return () => clearTimeout(searchTimeout);\r\n  }, [query]);\r\n\r\n  const handleStockSelect = (symbol: string) => {\r\n    setQuery(symbol);\r\n    setShowResults(false);\r\n    if (onStockSelect) {\r\n      onStockSelect(symbol);\r\n    } else {\r\n      // Default behavior: open stock detail modal\r\n      window.open(`/stock/${symbol}`, '_blank');\r\n    }\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setQuery(\"\");\r\n    setResults([]);\r\n    setShowResults(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={searchRef} className=\"relative w-full max-w-md\">\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary\" />\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder={placeholder}\r\n          className=\"h-10 w-full rounded-lg bg-card pl-10 pr-10 text-sm text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n          onFocus={() => setShowResults(true)}\r\n        />\r\n        {query && (\r\n          <button\r\n            onClick={clearSearch}\r\n            className=\"absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary hover:text-text-primary\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Search Results Dropdown */}\r\n      {showResults && (\r\n        <div className=\"absolute top-full z-50 mt-1 w-full rounded-lg bg-card shadow-lg ring-1 ring-black/5\">\r\n          {isLoading ? (\r\n            <div className=\"p-4 text-center text-sm text-text-secondary\">\r\n              Searching...\r\n            </div>\r\n          ) : results.length > 0 ? (\r\n            <div className=\"max-h-64 overflow-y-auto\">\r\n              {results.map((result, index) => (\r\n                <button\r\n                  key={`${result.symbol}-${index}`}\r\n                  onClick={() => handleStockSelect(result.symbol)}\r\n                  className=\"flex w-full items-center gap-3 p-3 text-left hover:bg-background transition-colors\"\r\n                >\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"font-medium text-text-primary\">\r\n                      {result.symbol}\r\n                    </div>\r\n                    <div className=\"text-xs text-text-secondary\">\r\n                      {result.shortname || result.longname}\r\n                    </div>\r\n                    <div className=\"text-xs text-text-secondary\">\r\n                      {result.exchange} • {result.typeDisp}\r\n                    </div>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          ) : query.length >= 2 ? (\r\n            <div className=\"p-4 text-center text-sm text-text-secondary\">\r\n              No stocks found\r\n            </div>\r\n          ) : (\r\n            <div className=\"p-4\">\r\n              <div className=\"mb-2 text-sm font-medium text-text-primary\">\r\n                Popular Stocks\r\n              </div>\r\n              <div className=\"space-y-1\">\r\n                {popularStocks.map((stock) => (\r\n                  <button\r\n                    key={stock.symbol}\r\n                    onClick={() => handleStockSelect(stock.symbol)}\r\n                    className=\"flex w-full items-center gap-2 rounded p-2 text-left hover:bg-background transition-colors\"\r\n                  >\r\n                    <TrendingUp className=\"h-4 w-4 text-accent\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-text-primary\">\r\n                        {stock.symbol}\r\n                      </div>\r\n                      <div className=\"text-xs text-text-secondary\">\r\n                        {stock.name}\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/LoadingSpinner.tsx"],"sourcesContent":["interface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  className?: string;\r\n}\r\n\r\nexport function LoadingSpinner({ size = 'md', className = '' }: LoadingSpinnerProps) {\r\n  const sizeClasses = {\r\n    sm: 'h-4 w-4',\r\n    md: 'h-6 w-6',\r\n    lg: 'h-8 w-8',\r\n  };\r\n\r\n  return (\r\n    <div className={`animate-spin rounded-full border-2 border-text-secondary border-t-accent ${sizeClasses[size]} ${className}`} />\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAKO,SAAS,eAAe,EAAE,OAAO,IAAI,EAAE,YAAY,EAAE,EAAuB;IACjF,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QAAI,WAAW,CAAC,yEAAyE,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW;;;;;;AAEhI;KAVgB"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/StockDetailModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { X, ExternalLink, TrendingUp, TrendingDown, Building2, Globe } from \"lucide-react\";\r\nimport { getStockQuote, getHistoricalData } from \"@/app/actions/stockActions\";\r\nimport { LoadingSpinner } from \"./LoadingSpinner\";\r\n\r\ninterface StockDetailModalProps {\r\n  symbol: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\ninterface QuoteData {\r\n  symbol: string;\r\n  name: string;\r\n  price: number;\r\n  change: number;\r\n  changePercentage: number;\r\n  volume: number;\r\n  marketCap: number;\r\n}\r\n\r\nexport function StockDetailModal({ symbol, isOpen, onClose }: StockDetailModalProps) {\r\n  const [quote, setQuote] = useState<QuoteData | null>(null);\r\n  const [chartData, setChartData] = useState<number[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && symbol) {\r\n      fetchStockData();\r\n    }\r\n  }, [isOpen, symbol]);\r\n\r\n  const fetchStockData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const [quoteData, historicalData] = await Promise.all([\r\n        getStockQuote(symbol),\r\n        getHistoricalData(symbol, '1mo'),\r\n      ]);\r\n\r\n      setQuote(quoteData);\r\n      setChartData(historicalData.map(item => item.close));\r\n    } catch (err) {\r\n      console.error('Error fetching stock data:', err);\r\n      setError('Failed to load stock data');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const isPositive = quote?.change ? quote.change >= 0 : false;\r\n\r\n  const renderChart = () => {\r\n    if (chartData.length === 0) {\r\n      return (\r\n        <div className=\"flex items-center justify-center h-64 text-text-secondary\">\r\n          No chart data available\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const max = Math.max(...chartData);\r\n    const min = Math.min(...chartData);\r\n    const range = max - min;\r\n\r\n    if (range === 0) {\r\n      return (\r\n        <div className=\"flex items-center justify-center h-64 text-text-secondary\">\r\n          Flat line\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        className=\"w-full h-64\"\r\n        viewBox={`0 0 ${chartData.length - 1} ${range}`}\r\n        preserveAspectRatio=\"none\"\r\n      >\r\n        <path\r\n          d={`M 0 ${chartData[0] - min} ${chartData\r\n            .slice(1)\r\n            .map((point, i) => `L ${i + 1} ${point - min}`)\r\n            .join(\" \")}`}\r\n          fill=\"none\"\r\n          stroke={isPositive ? \"#00C853\" : \"#FF3D00\"}\r\n          strokeWidth=\"2\"\r\n          vectorEffect=\"non-scaling-stroke\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-4xl max-h-[90vh] overflow-y-auto bg-background rounded-lg shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-card\">\r\n          <div>\r\n            <h2 className=\"text-xl font-bold\">{symbol}</h2>\r\n            <p className=\"text-text-secondary\">{quote?.name || 'Loading...'}</p>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => window.open(`https://finance.yahoo.com/quote/${symbol}`, '_blank')}\r\n              className=\"p-2 text-text-secondary hover:text-accent transition-colors\"\r\n              title=\"View on Yahoo Finance\"\r\n            >\r\n              <ExternalLink className=\"h-5 w-5\" />\r\n            </button>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-text-secondary hover:text-text-primary transition-colors\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6\">\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <LoadingSpinner size=\"lg\" />\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"flex items-center justify-center h-64 text-error\">\r\n              {error}\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-6\">\r\n              {/* Price Section */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <div className=\"text-sm text-text-secondary\">Current Price</div>\r\n                  <div className=\"text-2xl font-bold\">${quote?.price?.toFixed(2) || 'N/A'}</div>\r\n                  <div className={`flex items-center gap-1 text-sm ${isPositive ? 'text-success' : 'text-error'}`}>\r\n                    {isPositive ? <TrendingUp className=\"h-4 w-4\" /> : <TrendingDown className=\"h-4 w-4\" />}\r\n                    <span>${Math.abs(quote?.change || 0).toFixed(2)}</span>\r\n                    <span>({Math.abs(quote?.changePercentage || 0).toFixed(2)}%)</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <div className=\"text-sm text-text-secondary\">Volume</div>\r\n                  <div className=\"text-lg font-semibold\">\r\n                    {quote?.volume?.toLocaleString() || 'N/A'}\r\n                  </div>\r\n                  <div className=\"text-sm text-text-secondary\">\r\n                    Shares traded today\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <div className=\"text-sm text-text-secondary\">Market Cap</div>\r\n                  <div className=\"text-lg font-semibold\">\r\n                    ${quote?.marketCap?.toLocaleString() || 'N/A'}\r\n                  </div>\r\n                  <div className=\"text-sm text-text-secondary\">\r\n                    Total market value\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Chart */}\r\n              <div className=\"bg-card rounded-lg p-4\">\r\n                <h3 className=\"text-lg font-semibold mb-4\">Price Chart (1 Month)</h3>\r\n                {renderChart()}\r\n              </div>\r\n\r\n              {/* Company Information */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n                    <Building2 className=\"h-5 w-5\" />\r\n                    Stock Information\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Symbol</div>\r\n                      <div className=\"font-medium\">{symbol}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Company Name</div>\r\n                      <div className=\"font-medium\">{quote?.name || 'N/A'}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Current Price</div>\r\n                      <div className=\"font-medium\">${quote?.price?.toFixed(2) || 'N/A'}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Daily Change</div>\r\n                      <div className={`font-medium ${isPositive ? 'text-success' : 'text-error'}`}>\r\n                        {isPositive ? '+' : ''}{quote?.change?.toFixed(2) || 'N/A'} ({quote?.changePercentage?.toFixed(2) || 'N/A'}%)\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n                    <Globe className=\"h-5 w-5\" />\r\n                    Market Data\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Volume</div>\r\n                      <div className=\"font-medium\">{quote?.volume?.toLocaleString() || 'N/A'}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Market Cap</div>\r\n                      <div className=\"font-medium\">\r\n                        ${quote?.marketCap?.toLocaleString() || 'N/A'}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Data Source</div>\r\n                      <div className=\"font-medium\">Yahoo Finance</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Last Updated</div>\r\n                      <div className=\"font-medium\">{new Date().toLocaleString()}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Bell } from \"lucide-react\";\r\nimport { SearchBar } from \"@/components/features/SearchBar\";\r\nimport { StockDetailModal } from \"@/components/features/StockDetailModal\";\r\n\r\nexport function Header() {\r\n  const [selectedStock, setSelectedStock] = useState<string | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleStockSelect = (symbol: string) => {\r\n    setSelectedStock(symbol);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedStock(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"fixed left-sidebar right-0 top-0 z-30 flex h-16 items-center border-b border-card bg-background px-4\">\r\n        <div className=\"flex flex-1 items-center\">\r\n          <SearchBar\r\n            onStockSelect={handleStockSelect}\r\n            placeholder=\"Search stocks, news, or settings...\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center\">\r\n          <button className=\"relative rounded-full p-2 text-text-secondary hover:bg-card hover:text-text-primary\">\r\n            <Bell className=\"h-5 w-5\" />\r\n            <span className=\"absolute right-1 top-1 h-2 w-2 rounded-full bg-accent\" />\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Stock Detail Modal */}\r\n      {selectedStock && (\r\n        <StockDetailModal\r\n          symbol={selectedStock}\r\n          isOpen={isModalOpen}\r\n          onClose={handleCloseModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAFA;;;AAHA;;;;;AAOO,SAAS;;IACd,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,oBAAoB,CAAC;QACzB,iBAAiB;QACjB,eAAe;IACjB;IAEA,MAAM,mBAAmB;QACvB,eAAe;QACf,iBAAiB;IACnB;IAEA,qBACE;;0BACE,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,8IAAA,CAAA,YAAS;4BACR,eAAe;4BACf,aAAY;;;;;;;;;;;kCAIhB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAO,WAAU;;8CAChB,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;8CAChB,6LAAC;oCAAK,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAMrB,+BACC,6LAAC,qJAAA,CAAA,mBAAgB;gBACf,QAAQ;gBACR,QAAQ;gBACR,SAAS;;;;;;;;AAKnB;GA1CgB;KAAA"}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/auth/AuthModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { X, Mail, Chrome, Eye, EyeOff } from \"lucide-react\";\r\nimport { supabase } from \"@/lib/supabase\";\r\n\r\ninterface AuthModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  mode: 'signin' | 'signup';\r\n}\r\n\r\nexport function AuthModal({ isOpen, onClose, mode }: AuthModalProps) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleEmailAuth = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      if (mode === 'signup' && password !== confirmPassword) {\r\n        setError(\"Passwords do not match\");\r\n        return;\r\n      }\r\n\r\n      if (mode === 'signup') {\r\n        const { error } = await supabase.auth.signUp({\r\n          email,\r\n          password,\r\n          options: {\r\n            emailRedirectTo: `${window.location.origin}/auth/callback`\r\n          }\r\n        });\r\n\r\n        if (error) throw error;\r\n        setMessage(\"Check your email for the confirmation link!\");\r\n      } else {\r\n        const { error } = await supabase.auth.signInWithPassword({\r\n          email,\r\n          password\r\n        });\r\n\r\n        if (error) throw error;\r\n        onClose();\r\n      }\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleAuth = async () => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const { error } = await supabase.auth.signInWithOAuth({\r\n        provider: 'google',\r\n        options: {\r\n          redirectTo: `${window.location.origin}/auth/callback`\r\n        }\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGitHubAuth = async () => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const { error } = await supabase.auth.signInWithOAuth({\r\n        provider: 'github',\r\n        options: {\r\n          redirectTo: `${window.location.origin}/auth/callback`\r\n        }\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-md bg-background rounded-lg shadow-xl p-6\">\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-text-secondary hover:text-text-primary\"\r\n        >\r\n          <X className=\"h-5 w-5\" />\r\n        </button>\r\n\r\n        {/* Header */}\r\n        <div className=\"text-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-text-primary\">\r\n            {mode === 'signin' ? 'Welcome Back' : 'Create Account'}\r\n          </h2>\r\n          <p className=\"text-text-secondary mt-2\">\r\n            {mode === 'signin' \r\n              ? 'Sign in to your JTradePro account' \r\n              : 'Join JTradePro to start trading'\r\n            }\r\n          </p>\r\n        </div>\r\n\r\n        {/* Error/Message Display */}\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-error/10 border border-error/20 rounded-lg text-error text-sm\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {message && (\r\n          <div className=\"mb-4 p-3 bg-success/10 border border-success/20 rounded-lg text-success text-sm\">\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        {/* OAuth Buttons */}\r\n        <div className=\"space-y-3 mb-6\">\r\n          <button\r\n            onClick={handleGoogleAuth}\r\n            disabled={isLoading}\r\n            className=\"w-full flex items-center justify-center gap-3 bg-white text-gray-800 py-3 px-4 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors disabled:opacity-50\"\r\n          >\r\n            <Chrome className=\"h-5 w-5\" />\r\n            Continue with Google\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleGitHubAuth}\r\n            disabled={isLoading}\r\n            className=\"w-full flex items-center justify-center gap-3 bg-gray-800 text-white py-3 px-4 rounded-lg hover:bg-gray-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\r\n            </svg>\r\n            Continue with GitHub\r\n          </button>\r\n        </div>\r\n\r\n        {/* Divider */}\r\n        <div className=\"relative mb-6\">\r\n          <div className=\"absolute inset-0 flex items-center\">\r\n            <div className=\"w-full border-t border-card\" />\r\n          </div>\r\n          <div className=\"relative flex justify-center text-sm\">\r\n            <span className=\"px-2 bg-background text-text-secondary\">Or continue with email</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Email Form */}\r\n        <form onSubmit={handleEmailAuth} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Email address\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-text-secondary\" />\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"w-full pl-10 pr-4 py-3 border border-card rounded-lg bg-background text-text-primary placeholder-text-secondary focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Password\r\n            </label>\r\n            <div className=\"relative\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-text-secondary hover:text-text-primary\"\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n              </button>\r\n              <input\r\n                id=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n                className=\"w-full pr-10 pl-4 py-3 border border-card rounded-lg bg-background text-text-primary placeholder-text-secondary focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent\"\r\n                placeholder=\"Enter your password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {mode === 'signup' && (\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-text-primary mb-2\">\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-text-secondary hover:text-text-primary\"\r\n                >\r\n                  {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                </button>\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  type={showConfirmPassword ? \"text\" : \"password\"}\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  required\r\n                  className=\"w-full pr-10 pl-4 py-3 border border-card rounded-lg bg-background text-text-primary placeholder-text-secondary focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent\"\r\n                  placeholder=\"Confirm your password\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-accent text-white py-3 px-4 rounded-lg font-medium hover:bg-accent/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"flex items-center justify-center gap-2\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                {mode === 'signin' ? 'Signing in...' : 'Creating account...'}\r\n              </div>\r\n            ) : (\r\n              mode === 'signin' ? 'Sign In' : 'Create Account'\r\n            )}\r\n          </button>\r\n        </form>\r\n\r\n        {/* Footer */}\r\n        <div className=\"mt-6 text-center\">\r\n          <p className=\"text-text-secondary text-sm\">\r\n            {mode === 'signin' ? \"Don't have an account? \" : \"Already have an account? \"}\r\n            <button\r\n              onClick={() => {\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setConfirmPassword(\"\");\r\n                // This would typically toggle between signin/signup modes\r\n                // For now, we'll just close and reopen with different mode\r\n              }}\r\n              className=\"text-accent hover:underline font-medium\"\r\n            >\r\n              {mode === 'signin' ? 'Sign up' : 'Sign in'}\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1691, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/layout/Sidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Home, TrendingUp, PieChart, Settings, History, User, LogOut } from \"lucide-react\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { useState } from \"react\";\r\nimport { AuthModal } from \"@/components/auth/AuthModal\";\r\n\r\nconst navigation = [\r\n  { name: \"Dashboard\", href: \"/\", icon: Home },\r\n  { name: \"Market\", href: \"/market\", icon: TrendingUp },\r\n  { name: \"Portfolio\", href: \"/portfolio\", icon: PieChart },\r\n  { name: \"History\", href: \"/history\", icon: History },\r\n  { name: \"Settings\", href: \"/settings\", icon: Settings },\r\n];\r\n\r\nexport function Sidebar() {\r\n  const pathname = usePathname();\r\n  const { user, signOut } = useAuth();\r\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\r\n  const [authMode, setAuthMode] = useState<'signin' | 'signup'>('signin');\r\n\r\n  const handleAuthClick = (mode: 'signin' | 'signup') => {\r\n    setAuthMode(mode);\r\n    setIsAuthModalOpen(true);\r\n  };\r\n\r\n          const handleSignOut = async () => {\r\n            await signOut()\r\n            // Clear any local UI-only caches\r\n            try {\r\n              localStorage.removeItem('portfolioHoldings')\r\n              localStorage.removeItem('portfolioCash')\r\n              localStorage.removeItem('portfolioHistory')\r\n            } catch {}\r\n          };\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 z-40 h-screen w-sidebar border-r border-card bg-background\">\r\n      <div className=\"flex h-full flex-col px-3 py-4\">\r\n        {/* Logo */}\r\n        <div className=\"mb-10 flex items-center px-3\">\r\n          <span className=\"text-xl font-bold text-accent\">JTradePro</span>\r\n        </div>\r\n\r\n        {/* Navigation */}\r\n        <nav className=\"flex-1 space-y-1\">\r\n          {navigation.map((item) => {\r\n            const isActive = pathname === item.href;\r\n            return (\r\n              <Link\r\n                key={item.name}\r\n                href={item.href}\r\n                className={`group flex items-center rounded-lg px-3 py-2 text-sm font-medium transition-colors ${\r\n                  isActive\r\n                    ? \"bg-card text-accent\"\r\n                    : \"text-text-secondary hover:bg-card hover:text-text-primary\"\r\n                }`}\r\n              >\r\n                <item.icon\r\n                  className={`mr-3 h-5 w-5 ${\r\n                    isActive ? \"text-accent\" : \"text-text-secondary group-hover:text-text-primary\"\r\n                  }`}\r\n                />\r\n                {item.name}\r\n              </Link>\r\n            );\r\n          })}\r\n        </nav>\r\n\r\n        {/* Premium Card */}\r\n        <div className=\"mt-auto space-y-4\">\r\n          <div className=\"bg-gradient-to-r from-pink-500 to-red-500 rounded-lg p-4 text-white\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <div className=\"text-lg\">👑</div>\r\n              <h3 className=\"font-semibold\">Upgrade to Premium</h3>\r\n            </div>\r\n            <p className=\"text-sm text-pink-100 mb-3\">\r\n              Get access to advanced analytics, real-time alerts, and premium features.\r\n            </p>\r\n            <button className=\"w-full bg-white text-red-500 py-2 px-3 rounded-lg text-sm font-medium hover:bg-pink-50 transition-colors\">\r\n              Upgrade Now\r\n            </button>\r\n          </div>\r\n\r\n          {/* User Section */}\r\n          {user ? (\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-3 p-3 bg-card rounded-lg\">\r\n                <div className=\"w-8 h-8 bg-accent rounded-full flex items-center justify-center\">\r\n                  <User className=\"h-4 w-4 text-white\" />\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <p className=\"text-sm font-medium text-text-primary truncate\">\r\n                    {user.email}\r\n                  </p>\r\n                  <p className=\"text-xs text-text-secondary\">\r\n                    {user.user_metadata?.full_name || 'User'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <button\r\n                onClick={handleSignOut}\r\n                className=\"w-full bg-card text-text-primary py-2 px-3 rounded-lg text-sm font-medium hover:bg-background transition-colors flex items-center justify-center gap-2\"\r\n              >\r\n                <LogOut className=\"h-4 w-4\" />\r\n                Sign out\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-2\">\r\n              <button\r\n                onClick={() => handleAuthClick('signin')}\r\n                className=\"w-full bg-accent text-white py-2 px-3 rounded-lg text-sm font-medium hover:bg-accent/90 transition-colors flex items-center justify-center gap-2\"\r\n              >\r\n                <User className=\"h-4 w-4\" />\r\n                Sign in\r\n              </button>\r\n              <button\r\n                onClick={() => handleAuthClick('signup')}\r\n                className=\"w-full bg-card text-text-primary py-2 px-3 rounded-lg text-sm font-medium hover:bg-background transition-colors flex items-center justify-center gap-2\"\r\n              >\r\n                Create account\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Auth Modal */}\r\n      <AuthModal\r\n        isOpen={isAuthModalOpen}\r\n        onClose={() => setIsAuthModalOpen(false)}\r\n        mode={authMode}\r\n      />\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAJA;;;;;;;AASA,MAAM,aAAa;IACjB;QAAE,MAAM;QAAa,MAAM;QAAK,MAAM,sMAAA,CAAA,OAAI;IAAC;IAC3C;QAAE,MAAM;QAAU,MAAM;QAAW,MAAM,qNAAA,CAAA,aAAU;IAAC;IACpD;QAAE,MAAM;QAAa,MAAM;QAAc,MAAM,iNAAA,CAAA,WAAQ;IAAC;IACxD;QAAE,MAAM;QAAW,MAAM;QAAY,MAAM,2MAAA,CAAA,UAAO;IAAC;IACnD;QAAE,MAAM;QAAY,MAAM;QAAa,MAAM,6MAAA,CAAA,WAAQ;IAAC;CACvD;AAEM,SAAS;;IACd,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAChC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAE9D,MAAM,kBAAkB,CAAC;QACvB,YAAY;QACZ,mBAAmB;IACrB;IAEQ,MAAM,gBAAgB;QACpB,MAAM;QACN,iCAAiC;QACjC,IAAI;YACF,aAAa,UAAU,CAAC;YACxB,aAAa,UAAU,CAAC;YACxB,aAAa,UAAU,CAAC;QAC1B,EAAE,OAAM,CAAC;IACX;IAER,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAK,WAAU;sCAAgC;;;;;;;;;;;kCAIlD,6LAAC;wBAAI,WAAU;kCACZ,WAAW,GAAG,CAAC,CAAC;4BACf,MAAM,WAAW,aAAa,KAAK,IAAI;4BACvC,qBACE,6LAAC,+JAAA,CAAA,UAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAW,CAAC,mFAAmF,EAC7F,WACI,wBACA,6DACJ;;kDAEF,6LAAC,KAAK,IAAI;wCACR,WAAW,CAAC,aAAa,EACvB,WAAW,gBAAgB,qDAC3B;;;;;;oCAEH,KAAK,IAAI;;+BAbL,KAAK,IAAI;;;;;wBAgBpB;;;;;;kCAIF,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DAAU;;;;;;0DACzB,6LAAC;gDAAG,WAAU;0DAAgB;;;;;;;;;;;;kDAEhC,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;kDAG1C,6LAAC;wCAAO,WAAU;kDAA2G;;;;;;;;;;;;4BAM9H,qBACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,qMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;;;;;;0DAElB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAE,WAAU;kEACV,KAAK,KAAK;;;;;;kEAEb,6LAAC;wDAAE,WAAU;kEACV,KAAK,aAAa,EAAE,aAAa;;;;;;;;;;;;;;;;;;kDAIxC,6LAAC;wCACC,SAAS;wCACT,WAAU;;0DAEV,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;qDAKlC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;;0DAEV,6LAAC,qMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAG9B,6LAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;0BAST,6LAAC,0IAAA,CAAA,YAAS;gBACR,QAAQ;gBACR,SAAS,IAAM,mBAAmB;gBAClC,MAAM;;;;;;;;;;;;AAId;GAzHgB;;QACG,qIAAA,CAAA,cAAW;QACF,kIAAA,CAAA,UAAO;;;KAFnB"}},
    {"offset": {"line": 2014, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2020, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/layout/Dashboard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\ninterface DashboardProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport function Dashboard({ children }: DashboardProps) {\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <Sidebar />\r\n      <Header />\r\n      <main className=\"ml-sidebar pt-16\">\r\n        <div className=\"mx-auto max-w-container p-section\">\r\n          {children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,UAAU,EAAE,QAAQ,EAAkB;IACpD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0IAAA,CAAA,UAAO;;;;;0BACR,6LAAC,yIAAA,CAAA,SAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;KAZgB"}},
    {"offset": {"line": 2072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2078, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/portfolio/AssetDistribution.tsx"],"sourcesContent":["\"use client\";\r\n\r\ninterface PortfolioHolding {\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  value: number;\r\n  return: number;\r\n  returnPercentage: number;\r\n}\r\n\r\ninterface AssetDistributionProps {\r\n  holdings: PortfolioHolding[];\r\n  totalValue: number;\r\n  cashBalance: number;\r\n}\r\n\r\nconst colors = [\r\n  \"#F7931A\", // Orange\r\n  \"#627EEA\", // Blue\r\n  \"#00FFA3\", // Green\r\n  \"#26A17B\", // Teal\r\n  \"#FF6B6B\", // Red\r\n  \"#4ECDC4\", // Cyan\r\n  \"#45B7D1\", // Light Blue\r\n  \"#96CEB4\", // Mint\r\n  \"#FFEAA7\", // Yellow\r\n  \"#DDA0DD\", // Plum\r\n];\r\n\r\nconst cashColor = \"#10B981\"; // Emerald green for cash\r\n\r\nexport function AssetDistribution({ holdings, totalValue, cashBalance }: AssetDistributionProps) {\r\n  if (holdings.length === 0 && cashBalance === 0) {\r\n    return (\r\n      <div className=\"bg-card rounded-lg p-6\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Asset Distribution</h2>\r\n        <div className=\"flex items-center justify-center h-64 text-text-secondary\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl mb-2\">📊</div>\r\n            <div>No assets in portfolio yet</div>\r\n            <div className=\"text-sm mt-1\">Add some stocks or deposit cash to see your distribution</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Create assets array including cash\r\n  const assets = [];\r\n  \r\n  // Add stocks first\r\n  holdings.forEach((holding, index) => {\r\n    if (holding.value > 0) { // Only add stocks with positive value\r\n      assets.push({\r\n        symbol: holding.symbol,\r\n        name: holding.name,\r\n        value: holding.value,\r\n        color: colors[index % colors.length],\r\n        percentage: totalValue > 0 ? (holding.value / totalValue) * 100 : 0,\r\n      });\r\n    }\r\n  });\r\n\r\n  // Add cash if it exists and total value is positive\r\n  if (cashBalance > 0 && totalValue > 0) {\r\n    assets.push({\r\n      symbol: \"CASH\",\r\n      name: \"Cash\",\r\n      value: cashBalance,\r\n      color: cashColor,\r\n      percentage: (cashBalance / totalValue) * 100,\r\n    });\r\n  }\r\n\r\n  // Ensure percentages don't exceed 100%\r\n  const totalPercentage = assets.reduce((sum, asset) => sum + asset.percentage, 0);\r\n  if (totalPercentage > 100) {\r\n    // Normalize percentages to fit within 100%\r\n    assets.forEach(asset => {\r\n      asset.percentage = (asset.percentage / totalPercentage) * 100;\r\n    });\r\n  }\r\n\r\n  // Calculate SVG path for donut chart\r\n  const radius = 80;\r\n  const strokeWidth = 20;\r\n  const centerX = 100;\r\n  const centerY = 100;\r\n  let currentAngle = -90; // Start from top\r\n\r\n  const createDonutPath = () => {\r\n    const paths = assets.map((asset, index) => {\r\n      const percentage = Math.min(asset.percentage, 100); // Ensure percentage doesn't exceed 100%\r\n      const angle = (percentage / 100) * 360;\r\n      const startAngle = currentAngle;\r\n      const endAngle = currentAngle + angle;\r\n\r\n      const x1 = centerX + radius * Math.cos((startAngle * Math.PI) / 180);\r\n      const y1 = centerY + radius * Math.sin((startAngle * Math.PI) / 180);\r\n      const x2 = centerX + radius * Math.cos((endAngle * Math.PI) / 180);\r\n      const y2 = centerY + radius * Math.sin((endAngle * Math.PI) / 180);\r\n\r\n      const largeArcFlag = angle > 180 ? 1 : 0;\r\n\r\n      const path = [\r\n        `M ${x1} ${y1}`,\r\n        `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\r\n      ].join(\" \");\r\n\r\n      currentAngle += angle;\r\n      return (\r\n        <path\r\n          key={`chart-${asset.symbol}-${index}`}\r\n          d={path}\r\n          fill=\"none\"\r\n          stroke={asset.color}\r\n          strokeWidth={strokeWidth}\r\n          strokeLinecap=\"round\"\r\n        />\r\n      );\r\n    });\r\n\r\n    return paths;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-card rounded-lg p-6\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">Asset Distribution</h2>\r\n      <div className=\"flex items-center gap-8\">\r\n        {/* Donut Chart */}\r\n        <div className=\"relative\">\r\n          <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\r\n            {createDonutPath()}\r\n          </svg>\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold\">${totalValue.toLocaleString()}</div>\r\n              <div className=\"text-sm text-text-secondary\">Total Value</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Legend */}\r\n        <div className=\"flex-1\">\r\n          <div className=\"space-y-3\">\r\n            {assets.map((asset, index) => (\r\n              <div key={`legend-${asset.symbol}-${index}`} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div\r\n                    className=\"w-4 h-4 rounded-full\"\r\n                    style={{ backgroundColor: asset.color }}\r\n                  />\r\n                  <div>\r\n                    <div className=\"font-medium\">{asset.symbol}</div>\r\n                    <div className=\"text-sm text-text-secondary\">{asset.name}</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"font-medium\">${asset.value.toLocaleString()}</div>\r\n                  <div className=\"text-sm text-text-secondary\">\r\n                    {asset.percentage.toFixed(1)}%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2414, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/portfolio/HoldingsTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ArrowUp, ArrowDown, Trash2, Edit, TrendingDown } from \"lucide-react\";\r\n\r\ninterface PortfolioHolding {\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  value: number;\r\n  return: number;\r\n  returnPercentage: number;\r\n}\r\n\r\ninterface HoldingsTableProps {\r\n  holdings: PortfolioHolding[];\r\n  onRemoveStock: (symbol: string) => void;\r\n  onEditStock: (holding: PortfolioHolding) => void;\r\n  onSellStock: (holding: PortfolioHolding) => void;\r\n}\r\n\r\nexport function HoldingsTable({ holdings, onRemoveStock, onEditStock, onSellStock }: HoldingsTableProps) {\r\n  if (holdings.length === 0) {\r\n    return (\r\n      <div className=\"bg-card rounded-lg p-6\">\r\n        <div className=\"text-center text-text-secondary\">\r\n          <div className=\"text-2xl mb-2\">📈</div>\r\n          <div>No stocks in your portfolio yet</div>\r\n          <div className=\"text-sm mt-1\">Add some stocks to start tracking your investments</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-card rounded-lg overflow-hidden\">\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-background\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Asset\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Shares\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Avg Price\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Current Price\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Value\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Return\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-background\">\r\n            {holdings.map((holding) => {\r\n              const isPositive = holding.return >= 0;\r\n              return (\r\n                <tr key={holding.symbol} className=\"hover:bg-background/50 transition-colors\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div>\r\n                      <div className=\"font-medium text-text-primary\">{holding.symbol}</div>\r\n                      <div className=\"text-sm text-text-secondary\">{holding.name}</div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-text-primary\">\r\n                    {holding.shares.toLocaleString()}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-text-primary\">\r\n                    ${holding.avgPrice.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-text-primary\">\r\n                    ${holding.currentPrice.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-text-primary\">\r\n                    ${holding.value.toLocaleString()}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className={`flex items-center gap-1 text-sm ${isPositive ? 'text-success' : 'text-error'}`}>\r\n                      {isPositive ? (\r\n                        <ArrowUp className=\"h-4 w-4\" />\r\n                      ) : (\r\n                        <ArrowDown className=\"h-4 w-4\" />\r\n                      )}\r\n                      <span>${Math.abs(holding.return).toFixed(2)}</span>\r\n                      <span>({holding.returnPercentage.toFixed(2)}%)</span>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <button\r\n                        onClick={() => onSellStock(holding)}\r\n                        className=\"text-error hover:text-error/80 transition-colors\"\r\n                        title=\"Sell shares\"\r\n                      >\r\n                        <TrendingDown className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => onEditStock(holding)}\r\n                        className=\"text-accent hover:text-accent/80 transition-colors\"\r\n                        title=\"Edit position\"\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => onRemoveStock(holding.symbol)}\r\n                        className=\"text-error hover:text-error/80 transition-colors\"\r\n                        title=\"Remove from portfolio\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAsBO,SAAS,cAAc,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,EAAsB;IACrG,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,6LAAC;kCAAI;;;;;;kCACL,6LAAC;wBAAI,WAAU;kCAAe;;;;;;;;;;;;;;;;;IAItC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAM,WAAU;;kCACf,6LAAC;wBAAM,WAAU;kCACf,cAAA,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;8CAGrG,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;8CAGrG,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;8CAGrG,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;8CAGrG,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;8CAGrG,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;8CAGrG,6LAAC;oCAAG,WAAU;8CAAuF;;;;;;;;;;;;;;;;;kCAKzG,6LAAC;wBAAM,WAAU;kCACd,SAAS,GAAG,CAAC,CAAC;4BACb,MAAM,aAAa,QAAQ,MAAM,IAAI;4BACrC,qBACE,6LAAC;gCAAwB,WAAU;;kDACjC,6LAAC;wCAAG,WAAU;kDACZ,cAAA,6LAAC;;8DACC,6LAAC;oDAAI,WAAU;8DAAiC,QAAQ,MAAM;;;;;;8DAC9D,6LAAC;oDAAI,WAAU;8DAA+B,QAAQ,IAAI;;;;;;;;;;;;;;;;;kDAG9D,6LAAC;wCAAG,WAAU;kDACX,QAAQ,MAAM,CAAC,cAAc;;;;;;kDAEhC,6LAAC;wCAAG,WAAU;;4CAAwD;4CAClE,QAAQ,QAAQ,CAAC,OAAO,CAAC;;;;;;;kDAE7B,6LAAC;wCAAG,WAAU;;4CAAwD;4CAClE,QAAQ,YAAY,CAAC,OAAO,CAAC;;;;;;;kDAEjC,6LAAC;wCAAG,WAAU;;4CAAwD;4CAClE,QAAQ,KAAK,CAAC,cAAc;;;;;;;kDAEhC,6LAAC;wCAAG,WAAU;kDACZ,cAAA,6LAAC;4CAAI,WAAW,CAAC,gCAAgC,EAAE,aAAa,iBAAiB,cAAc;;gDAC5F,2BACC,6LAAC,+MAAA,CAAA,UAAO;oDAAC,WAAU;;;;;yEAEnB,6LAAC,mNAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;8DAEvB,6LAAC;;wDAAK;wDAAE,KAAK,GAAG,CAAC,QAAQ,MAAM,EAAE,OAAO,CAAC;;;;;;;8DACzC,6LAAC;;wDAAK;wDAAE,QAAQ,gBAAgB,CAAC,OAAO,CAAC;wDAAG;;;;;;;;;;;;;;;;;;kDAGhD,6LAAC;wCAAG,WAAU;kDACZ,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,SAAS,IAAM,YAAY;oDAC3B,WAAU;oDACV,OAAM;8DAEN,cAAA,6LAAC,yNAAA,CAAA,eAAY;wDAAC,WAAU;;;;;;;;;;;8DAE1B,6LAAC;oDACC,SAAS,IAAM,YAAY;oDAC3B,WAAU;oDACV,OAAM;8DAEN,cAAA,6LAAC,8MAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;;;;;;8DAElB,6LAAC;oDACC,SAAS,IAAM,cAAc,QAAQ,MAAM;oDAC3C,WAAU;oDACV,OAAM;8DAEN,cAAA,6LAAC,6MAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;+BAnDjB,QAAQ,MAAM;;;;;wBAyD3B;;;;;;;;;;;;;;;;;;;;;;AAMZ;KA7GgB"}},
    {"offset": {"line": 2774, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2780, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/portfolio/AddStockModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { X, Search, Plus } from \"lucide-react\";\r\nimport { searchStocks, SearchResult } from \"@/app/actions/stockActions\";\r\n\r\ninterface PortfolioHolding {\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  value: number;\r\n  return: number;\r\n  returnPercentage: number;\r\n}\r\n\r\ninterface AddStockModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAddStock: (holding: Omit<PortfolioHolding, 'currentPrice' | 'value' | 'return' | 'returnPercentage'>) => void;\r\n  existingHoldings: PortfolioHolding[];\r\n}\r\n\r\nexport function AddStockModal({ isOpen, onClose, onAddStock, existingHoldings }: AddStockModalProps) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState<SearchResult | null>(null);\r\n  const [shares, setShares] = useState(\"\");\r\n  const [avgPrice, setAvgPrice] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleSearch = async (query: string) => {\r\n    setSearchQuery(query);\r\n    if (query.length >= 2) {\r\n      setIsSearching(true);\r\n      try {\r\n        const results = await searchStocks(query);\r\n        // Filter out stocks already in portfolio\r\n        const filteredResults = results.filter(\r\n          result => !existingHoldings.some(holding => holding.symbol === result.symbol)\r\n        );\r\n        setSearchResults(filteredResults.slice(0, 10));\r\n      } catch (error) {\r\n        console.error(\"Search error:\", error);\r\n        setSearchResults([]);\r\n      } finally {\r\n        setIsSearching(false);\r\n      }\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  const handleStockSelect = (stock: SearchResult) => {\r\n    setSelectedStock(stock);\r\n    setSearchResults([]);\r\n    setSearchQuery(stock.symbol);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedStock || !shares || !avgPrice) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    const sharesNum = parseFloat(shares);\r\n    const avgPriceNum = parseFloat(avgPrice);\r\n\r\n    if (isNaN(sharesNum) || isNaN(avgPriceNum) || sharesNum <= 0 || avgPriceNum <= 0) {\r\n      alert(\"Please enter valid numbers\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const newHolding: Omit<PortfolioHolding, 'currentPrice' | 'value' | 'return' | 'returnPercentage'> = {\r\n        symbol: selectedStock.symbol,\r\n        name: selectedStock.shortname || selectedStock.longname || selectedStock.symbol,\r\n        shares: sharesNum,\r\n        avgPrice: avgPriceNum,\r\n        currentPrice: 0, // Will be updated by the portfolio\r\n        value: 0,\r\n        return: 0,\r\n        returnPercentage: 0,\r\n      };\r\n\r\n      onAddStock(newHolding);\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error adding stock:\", error);\r\n      alert(\"Error adding stock to portfolio\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSearchQuery(\"\");\r\n    setSearchResults([]);\r\n    setSelectedStock(null);\r\n    setShares(\"\");\r\n    setAvgPrice(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-md bg-background rounded-lg shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-card\">\r\n          <h2 className=\"text-xl font-bold\">Add Stock to Portfolio</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-2 text-text-secondary hover:text-text-primary transition-colors\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Stock Search */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Stock Symbol\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary\" />\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                placeholder=\"Search stocks (e.g., AAPL, MSFT)\"\r\n                className=\"w-full pl-10 pr-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n              />\r\n            </div>\r\n\r\n            {/* Search Results */}\r\n            {searchResults.length > 0 && (\r\n              <div className=\"mt-2 max-h-48 overflow-y-auto bg-card rounded-lg border border-background\">\r\n                {searchResults.map((result, index) => (\r\n                  <button\r\n                    key={`${result.symbol}-${index}`}\r\n                    onClick={() => handleStockSelect(result)}\r\n                    className=\"w-full p-3 text-left hover:bg-background transition-colors border-b border-background last:border-b-0\"\r\n                  >\r\n                    <div className=\"font-medium text-text-primary\">{result.symbol}</div>\r\n                    <div className=\"text-sm text-text-secondary\">\r\n                      {result.shortname || result.longname}\r\n                    </div>\r\n                    <div className=\"text-xs text-text-secondary\">\r\n                      {result.exchange} • {result.typeDisp}\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {isSearching && (\r\n              <div className=\"mt-2 text-sm text-text-secondary\">\r\n                Searching...\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Selected Stock Info */}\r\n          {selectedStock && (\r\n            <div className=\"bg-card rounded-lg p-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <div className=\"font-medium text-text-primary\">{selectedStock.symbol}</div>\r\n                  <div className=\"text-sm text-text-secondary\">\r\n                    {selectedStock.shortname || selectedStock.longname}\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setSelectedStock(null)}\r\n                  className=\"text-text-secondary hover:text-text-primary\"\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Number of Shares */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Number of Shares\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={shares}\r\n              onChange={(e) => setShares(e.target.value)}\r\n              placeholder=\"Enter number of shares\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              className=\"w-full px-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Average Price */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Average Price per Share ($)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={avgPrice}\r\n              onChange={(e) => setAvgPrice(e.target.value)}\r\n              placeholder=\"Enter average price\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              className=\"w-full px-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Total Investment Preview */}\r\n          {shares && avgPrice && !isNaN(parseFloat(shares)) && !isNaN(parseFloat(avgPrice)) && (\r\n            <div className=\"bg-card rounded-lg p-4\">\r\n              <div className=\"text-sm text-text-secondary mb-1\">Total Investment</div>\r\n              <div className=\"text-lg font-semibold text-text-primary\">\r\n                ${(parseFloat(shares) * parseFloat(avgPrice)).toFixed(2)}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!selectedStock || !shares || !avgPrice || isSubmitting}\r\n            className=\"w-full bg-accent text-white py-3 px-4 rounded-lg hover:bg-accent/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\r\n                Adding...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Plus className=\"h-4 w-4\" />\r\n                Add to Portfolio\r\n              </>\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 3211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/portfolio/EditStockModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { X, Save } from \"lucide-react\";\r\n\r\ninterface PortfolioHolding {\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  value: number;\r\n  return: number;\r\n  returnPercentage: number;\r\n}\r\n\r\ninterface EditStockModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onUpdateStock: (symbol: string, updatedHolding: Omit<PortfolioHolding, 'currentPrice' | 'value' | 'return' | 'returnPercentage'>) => void;\r\n  holding: PortfolioHolding | null;\r\n}\r\n\r\nexport function EditStockModal({ isOpen, onClose, onUpdateStock, holding }: EditStockModalProps) {\r\n  const [shares, setShares] = useState(\"\");\r\n  const [avgPrice, setAvgPrice] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Update form when holding changes\r\n  useEffect(() => {\r\n    if (holding) {\r\n      setShares(holding.shares.toString());\r\n      setAvgPrice(holding.avgPrice.toString());\r\n    }\r\n  }, [holding]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!holding || !shares || !avgPrice) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    const sharesNum = parseFloat(shares);\r\n    const avgPriceNum = parseFloat(avgPrice);\r\n\r\n    if (isNaN(sharesNum) || isNaN(avgPriceNum) || sharesNum <= 0 || avgPriceNum <= 0) {\r\n      alert(\"Please enter valid numbers\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const updatedHolding: Omit<PortfolioHolding, 'currentPrice' | 'value' | 'return' | 'returnPercentage'> = {\r\n        symbol: holding.symbol,\r\n        name: holding.name,\r\n        shares: sharesNum,\r\n        avgPrice: avgPriceNum,\r\n        currentPrice: 0, // Will be updated by the portfolio\r\n        value: 0,\r\n        return: 0,\r\n        returnPercentage: 0,\r\n      };\r\n\r\n      onUpdateStock(holding.symbol, updatedHolding);\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error updating stock:\", error);\r\n      alert(\"Error updating stock in portfolio\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setShares(\"\");\r\n    setAvgPrice(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen || !holding) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-md bg-background rounded-lg shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-card\">\r\n          <h2 className=\"text-xl font-bold\">Edit Stock Position</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-2 text-text-secondary hover:text-text-primary transition-colors\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Stock Info */}\r\n          <div className=\"bg-card rounded-lg p-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-text-primary\">{holding.symbol}</div>\r\n              <div className=\"text-sm text-text-secondary\">{holding.name}</div>\r\n              <div className=\"text-sm text-text-secondary mt-1\">\r\n                Current Price: ${holding.currentPrice.toFixed(2)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Number of Shares */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Number of Shares\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={shares}\r\n              onChange={(e) => setShares(e.target.value)}\r\n              placeholder=\"Enter number of shares\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              className=\"w-full px-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Average Price */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Average Price per Share ($)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={avgPrice}\r\n              onChange={(e) => setAvgPrice(e.target.value)}\r\n              placeholder=\"Enter average price\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              className=\"w-full px-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Total Investment Preview */}\r\n          {shares && avgPrice && !isNaN(parseFloat(shares)) && !isNaN(parseFloat(avgPrice)) && (\r\n            <div className=\"bg-card rounded-lg p-4\">\r\n              <div className=\"text-sm text-text-secondary mb-1\">Total Investment</div>\r\n              <div className=\"text-lg font-semibold text-text-primary\">\r\n                ${(parseFloat(shares) * parseFloat(avgPrice)).toFixed(2)}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Current vs New Investment Comparison */}\r\n          {shares && avgPrice && !isNaN(parseFloat(shares)) && !isNaN(parseFloat(avgPrice)) && (\r\n            <div className=\"bg-card rounded-lg p-4 space-y-2\">\r\n              <div className=\"text-sm text-text-secondary\">Investment Comparison</div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Current Investment:</span>\r\n                <span>${(holding.shares * holding.avgPrice).toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>New Investment:</span>\r\n                <span>${(parseFloat(shares) * parseFloat(avgPrice)).toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm font-medium\">\r\n                <span>Difference:</span>\r\n                <span className={parseFloat(shares) * parseFloat(avgPrice) - (holding.shares * holding.avgPrice) >= 0 ? 'text-success' : 'text-error'}>\r\n                  {parseFloat(shares) * parseFloat(avgPrice) - (holding.shares * holding.avgPrice) >= 0 ? '+' : ''}\r\n                  ${(parseFloat(shares) * parseFloat(avgPrice) - (holding.shares * holding.avgPrice)).toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!shares || !avgPrice || isSubmitting}\r\n            className=\"w-full bg-accent text-white py-3 px-4 rounded-lg hover:bg-accent/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\r\n                Updating...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Save className=\"h-4 w-4\" />\r\n                Update Position\r\n              </>\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 3613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3619, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/portfolio/SellStockModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { X, TrendingDown, DollarSign } from \"lucide-react\";\r\n\r\ninterface PortfolioHolding {\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  value: number;\r\n  return: number;\r\n  returnPercentage: number;\r\n}\r\n\r\ninterface SellStockModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSellStock: (symbol: string, sharesToSell: number, sellPrice: number) => void;\r\n  holding: PortfolioHolding | null;\r\n}\r\n\r\nexport function SellStockModal({ isOpen, onClose, onSellStock, holding }: SellStockModalProps) {\r\n  const [sharesToSell, setSharesToSell] = useState(\"\");\r\n  const [sellPrice, setSellPrice] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Update form when holding changes\r\n  useEffect(() => {\r\n    if (holding) {\r\n      setSharesToSell(\"\");\r\n      setSellPrice(holding.currentPrice.toString());\r\n    }\r\n  }, [holding]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!holding || !sharesToSell || !sellPrice) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    const sharesNum = parseFloat(sharesToSell);\r\n    const sellPriceNum = parseFloat(sellPrice);\r\n\r\n    if (isNaN(sharesNum) || isNaN(sellPriceNum) || sharesNum <= 0 || sellPriceNum <= 0) {\r\n      alert(\"Please enter valid numbers\");\r\n      return;\r\n    }\r\n\r\n    if (sharesNum > holding.shares) {\r\n      alert(\"You cannot sell more shares than you own\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      onSellStock(holding.symbol, sharesNum, sellPriceNum);\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error selling stock:\", error);\r\n      alert(\"Error selling stock\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSharesToSell(\"\");\r\n    setSellPrice(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  const calculateSaleValue = () => {\r\n    if (!sharesToSell || !sellPrice) return 0;\r\n    const shares = parseFloat(sharesToSell);\r\n    const price = parseFloat(sellPrice);\r\n    return isNaN(shares) || isNaN(price) ? 0 : shares * price;\r\n  };\r\n\r\n  const calculateProfitLoss = () => {\r\n    if (!holding || !sharesToSell || !sellPrice) return 0;\r\n    const shares = parseFloat(sharesToSell);\r\n    const price = parseFloat(sellPrice);\r\n    if (isNaN(shares) || isNaN(price)) return 0;\r\n    \r\n    const saleValue = shares * price;\r\n    const costBasis = shares * holding.avgPrice;\r\n    return saleValue - costBasis;\r\n  };\r\n\r\n  const getProfitLossPercentage = () => {\r\n    if (!holding || !sharesToSell || !sellPrice) return 0;\r\n    const shares = parseFloat(sharesToSell);\r\n    const price = parseFloat(sellPrice);\r\n    if (isNaN(shares) || isNaN(price)) return 0;\r\n    \r\n    const costBasis = shares * holding.avgPrice;\r\n    if (costBasis === 0) return 0;\r\n    \r\n    const profitLoss = calculateProfitLoss();\r\n    return (profitLoss / costBasis) * 100;\r\n  };\r\n\r\n  if (!isOpen || !holding) return null;\r\n\r\n  const saleValue = calculateSaleValue();\r\n  const profitLoss = calculateProfitLoss();\r\n  const profitLossPercentage = getProfitLossPercentage();\r\n  const isProfit = profitLoss >= 0;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-md bg-background rounded-lg shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-card\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"p-2 rounded-lg bg-error/20 text-error\">\r\n              <TrendingDown className=\"h-5 w-5\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-bold\">Sell Stock</h2>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-2 text-text-secondary hover:text-text-primary transition-colors\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Stock Info */}\r\n          <div className=\"bg-card rounded-lg p-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-text-primary\">{holding.symbol}</div>\r\n              <div className=\"text-sm text-text-secondary\">{holding.name}</div>\r\n              <div className=\"text-sm text-text-secondary mt-1\">\r\n                Current Price: ${holding.currentPrice.toFixed(2)}\r\n              </div>\r\n              <div className=\"text-sm text-text-secondary\">\r\n                Owned: {holding.shares.toLocaleString()} shares\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Shares to Sell */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Shares to Sell\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={sharesToSell}\r\n              onChange={(e) => setSharesToSell(e.target.value)}\r\n              placeholder={`Enter shares (max: ${holding.shares})`}\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              max={holding.shares}\r\n              className=\"w-full px-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n              required\r\n            />\r\n            <div className=\"text-xs text-text-secondary mt-1\">\r\n              Available: {holding.shares.toLocaleString()} shares\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sell Price */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              Sell Price per Share ($)\r\n            </label>\r\n            <div className=\"relative\">\r\n              <DollarSign className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary\" />\r\n              <input\r\n                type=\"number\"\r\n                value={sellPrice}\r\n                onChange={(e) => setSellPrice(e.target.value)}\r\n                placeholder=\"Enter sell price\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                className=\"w-full pl-10 pr-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Price Buttons */}\r\n          <div>\r\n            <div className=\"text-sm text-text-secondary mb-3\">Quick Prices</div>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              {[\r\n                holding.currentPrice * 0.95,\r\n                holding.currentPrice,\r\n                holding.currentPrice * 1.05\r\n              ].map((price) => (\r\n                <button\r\n                  key={price}\r\n                  type=\"button\"\r\n                  onClick={() => setSellPrice(price.toFixed(2))}\r\n                  className=\"px-3 py-2 text-sm rounded-lg bg-card text-text-primary hover:bg-background transition-colors border border-card\"\r\n                >\r\n                  ${price.toFixed(2)}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sale Preview */}\r\n          {sharesToSell && sellPrice && !isNaN(parseFloat(sharesToSell)) && !isNaN(parseFloat(sellPrice)) && (\r\n            <div className=\"bg-card rounded-lg p-4 space-y-3\">\r\n              <div className=\"text-sm text-text-secondary\">Sale Preview</div>\r\n              \r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Sale Value:</span>\r\n                <span className=\"font-medium\">${saleValue.toFixed(2)}</span>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Cost Basis:</span>\r\n                <span>${(parseFloat(sharesToSell) * holding.avgPrice).toFixed(2)}</span>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between text-sm font-medium border-t border-background pt-2\">\r\n                <span>Profit/Loss:</span>\r\n                <span className={isProfit ? 'text-success' : 'text-error'}>\r\n                  {isProfit ? '+' : ''}${profitLoss.toFixed(2)} ({profitLossPercentage.toFixed(2)}%)\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Warning for selling all shares */}\r\n          {sharesToSell && parseFloat(sharesToSell) === holding.shares && (\r\n            <div className=\"bg-warning/10 border border-warning/20 rounded-lg p-3\">\r\n              <div className=\"text-sm text-warning\">\r\n                ⚠️ You're selling all shares of {holding.symbol}. This will remove the position from your portfolio.\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!sharesToSell || !sellPrice || isNaN(parseFloat(sharesToSell)) || isNaN(parseFloat(sellPrice)) || parseFloat(sharesToSell) <= 0 || parseFloat(sharesToSell) > holding.shares || isSubmitting}\r\n            className=\"w-full bg-error text-white py-3 px-4 rounded-lg hover:bg-error/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\r\n                Selling...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <TrendingDown className=\"h-4 w-4\" />\r\n                Sell {sharesToSell ? parseFloat(sharesToSell).toLocaleString() : '0'} Shares\r\n              </>\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 4140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/portfolio/CashModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { X, DollarSign, TrendingUp, TrendingDown } from \"lucide-react\";\r\n\r\ninterface CashModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onTransaction: (amount: number) => void;\r\n  action: 'deposit' | 'withdraw';\r\n  currentBalance: number;\r\n}\r\n\r\nexport function CashModal({ isOpen, onClose, onTransaction, action, currentBalance }: CashModalProps) {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!amount) {\r\n      alert(\"Please enter an amount\");\r\n      return;\r\n    }\r\n\r\n    const amountNum = parseFloat(amount);\r\n\r\n    if (isNaN(amountNum) || amountNum <= 0) {\r\n      alert(\"Please enter a valid amount\");\r\n      return;\r\n    }\r\n\r\n    if (action === 'withdraw' && amountNum > currentBalance) {\r\n      alert(\"Insufficient cash balance for withdrawal\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      onTransaction(amountNum);\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error processing transaction:\", error);\r\n      alert(\"Error processing transaction\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  const getQuickAmounts = () => {\r\n    if (action === 'deposit') {\r\n      return [100, 500, 1000, 5000, 10000];\r\n    } else {\r\n      return [100, 500, 1000, Math.floor(currentBalance / 2), currentBalance];\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const isDeposit = action === 'deposit';\r\n  const quickAmounts = getQuickAmounts();\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-md bg-background rounded-lg shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-card\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className={`p-2 rounded-lg ${isDeposit ? 'bg-success/20 text-success' : 'bg-error/20 text-error'}`}>\r\n              {isDeposit ? <TrendingUp className=\"h-5 w-5\" /> : <TrendingDown className=\"h-5 w-5\" />}\r\n            </div>\r\n            <h2 className=\"text-xl font-bold\">\r\n              {isDeposit ? 'Deposit Funds' : 'Withdraw Funds'}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-2 text-text-secondary hover:text-text-primary transition-colors\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Current Balance */}\r\n          <div className=\"bg-card rounded-lg p-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-sm text-text-secondary mb-1\">Current Cash Balance</div>\r\n              <div className=\"text-2xl font-bold text-accent\">${currentBalance.toLocaleString()}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Amount Input */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-text-primary mb-2\">\r\n              {isDeposit ? 'Deposit Amount ($)' : 'Withdrawal Amount ($)'}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <DollarSign className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary\" />\r\n              <input\r\n                type=\"number\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                placeholder={`Enter ${isDeposit ? 'deposit' : 'withdrawal'} amount`}\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                max={isDeposit ? undefined : currentBalance}\r\n                className=\"w-full pl-10 pr-4 py-2 rounded-lg bg-card text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Amount Buttons */}\r\n          <div>\r\n            <div className=\"text-sm text-text-secondary mb-3\">Quick Amounts</div>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              {quickAmounts.map((quickAmount) => (\r\n                <button\r\n                  key={quickAmount}\r\n                  type=\"button\"\r\n                  onClick={() => setAmount(quickAmount.toString())}\r\n                  className=\"px-3 py-2 text-sm rounded-lg bg-card text-text-primary hover:bg-background transition-colors border border-card\"\r\n                >\r\n                  ${quickAmount.toLocaleString()}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Transaction Preview */}\r\n          {amount && !isNaN(parseFloat(amount)) && (\r\n            <div className=\"bg-card rounded-lg p-4 space-y-2\">\r\n              <div className=\"text-sm text-text-secondary\">Transaction Preview</div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Current Balance:</span>\r\n                <span>${currentBalance.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>{isDeposit ? 'Deposit Amount:' : 'Withdrawal Amount:'}</span>\r\n                <span className={isDeposit ? 'text-success' : 'text-error'}>\r\n                  {isDeposit ? '+' : '-'}${parseFloat(amount).toLocaleString()}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm font-medium border-t border-background pt-2\">\r\n                <span>New Balance:</span>\r\n                <span className=\"text-accent\">\r\n                  ${(currentBalance + (isDeposit ? parseFloat(amount) : -parseFloat(amount))).toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Warning for insufficient funds */}\r\n          {action === 'withdraw' && amount && !isNaN(parseFloat(amount)) && parseFloat(amount) > currentBalance && (\r\n            <div className=\"bg-error/10 border border-error/20 rounded-lg p-3\">\r\n              <div className=\"text-sm text-error\">\r\n                ⚠️ Insufficient funds. You cannot withdraw more than your current balance.\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!amount || isNaN(parseFloat(amount)) || parseFloat(amount) <= 0 || (action === 'withdraw' && parseFloat(amount) > currentBalance) || isSubmitting}\r\n            className={`w-full py-3 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 ${\r\n              isDeposit\r\n                ? 'bg-success text-white hover:bg-success/90'\r\n                : 'bg-error text-white hover:bg-error/90'\r\n            }`}\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              <>\r\n                {isDeposit ? <TrendingUp className=\"h-4 w-4\" /> : <TrendingDown className=\"h-4 w-4\" />}\r\n                {isDeposit ? 'Deposit Funds' : 'Withdraw Funds'}\r\n              </>\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;;;AAHA;;;AAaO,SAAS,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,EAAkB;;IAClG,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,QAAQ;YACX,MAAM;YACN;QACF;QAEA,MAAM,YAAY,WAAW;QAE7B,IAAI,MAAM,cAAc,aAAa,GAAG;YACtC,MAAM;YACN;QACF;QAEA,IAAI,WAAW,cAAc,YAAY,gBAAgB;YACvD,MAAM;YACN;QACF;QAEA,gBAAgB;QAChB,IAAI;YACF,cAAc;YACd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,MAAM;QACR,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,YAAY;QAChB,UAAU;IACZ;IAEA,MAAM,cAAc;QAClB;QACA;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,WAAW,WAAW;YACxB,OAAO;gBAAC;gBAAK;gBAAK;gBAAM;gBAAM;aAAM;QACtC,OAAO;YACL,OAAO;gBAAC;gBAAK;gBAAK;gBAAM,KAAK,KAAK,CAAC,iBAAiB;gBAAI;aAAe;QACzE;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,YAAY,WAAW;IAC7B,MAAM,eAAe;IAErB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAW,CAAC,eAAe,EAAE,YAAY,+BAA+B,0BAA0B;8CACpG,0BAAY,6LAAC,qNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;6DAAe,6LAAC,yNAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;;;;;;8CAE5E,6LAAC;oCAAG,WAAU;8CACX,YAAY,kBAAkB;;;;;;;;;;;;sCAGnC,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAKjB,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCAEtC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDAAmC;;;;;;kDAClD,6LAAC;wCAAI,WAAU;;4CAAiC;4CAAE,eAAe,cAAc;;;;;;;;;;;;;;;;;;sCAKnF,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CACd,YAAY,uBAAuB;;;;;;8CAEtC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,qNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;sDACtB,6LAAC;4CACC,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;4CACzC,aAAa,CAAC,MAAM,EAAE,YAAY,YAAY,aAAa,OAAO,CAAC;4CACnE,MAAK;4CACL,KAAI;4CACJ,KAAK,YAAY,YAAY;4CAC7B,WAAU;4CACV,QAAQ;;;;;;;;;;;;;;;;;;sCAMd,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;8CAAmC;;;;;;8CAClD,6LAAC;oCAAI,WAAU;8CACZ,aAAa,GAAG,CAAC,CAAC,4BACjB,6LAAC;4CAEC,MAAK;4CACL,SAAS,IAAM,UAAU,YAAY,QAAQ;4CAC7C,WAAU;;gDACX;gDACG,YAAY,cAAc;;2CALvB;;;;;;;;;;;;;;;;wBAYZ,UAAU,CAAC,MAAM,WAAW,0BAC3B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CAA8B;;;;;;8CAC7C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;sDAAK;;;;;;sDACN,6LAAC;;gDAAK;gDAAE,eAAe,cAAc;;;;;;;;;;;;;8CAEvC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;sDAAM,YAAY,oBAAoB;;;;;;sDACvC,6LAAC;4CAAK,WAAW,YAAY,iBAAiB;;gDAC3C,YAAY,MAAM;gDAAI;gDAAE,WAAW,QAAQ,cAAc;;;;;;;;;;;;;8CAG9D,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;sDAAK;;;;;;sDACN,6LAAC;4CAAK,WAAU;;gDAAc;gDAC1B,CAAC,iBAAiB,CAAC,YAAY,WAAW,UAAU,CAAC,WAAW,OAAO,CAAC,EAAE,cAAc;;;;;;;;;;;;;;;;;;;wBAOjG,WAAW,cAAc,UAAU,CAAC,MAAM,WAAW,YAAY,WAAW,UAAU,gCACrF,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CAAqB;;;;;;;;;;;sCAOxC,6LAAC;4BACC,MAAK;4BACL,UAAU,CAAC,UAAU,MAAM,WAAW,YAAY,WAAW,WAAW,KAAM,WAAW,cAAc,WAAW,UAAU,kBAAmB;4BAC/I,WAAW,CAAC,qIAAqI,EAC/I,YACI,8CACA,yCACJ;sCAED,6BACC;;kDACE,6LAAC;wCAAI,WAAU;;;;;;oCAAiF;;6DAIlG;;oCACG,0BAAY,6LAAC,qNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;6DAAe,6LAAC,yNAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;oCACzE,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/C;GAzLgB;KAAA"}},
    {"offset": {"line": 4583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4589, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/services/portfolio.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\n\r\nexport interface HoldingInput {\r\n  symbol: string\r\n  name: string\r\n  shares: number\r\n  avgPrice: number\r\n  currentPrice?: number\r\n}\r\n\r\nexport interface PortfolioSnapshot {\r\n  portfolioId: string\r\n  cashBalance: number\r\n  holdings: Array<{\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n    shares: number\r\n    avgPrice: number\r\n    currentPrice: number\r\n  }>\r\n}\r\n\r\nexport async function getOrCreatePrimaryPortfolio(userId: string): Promise<string> {\r\n  try {\r\n    const { data: existing, error: selectError } = await supabase\r\n      .from('portfolios')\r\n      .select('id')\r\n      .eq('user_id', userId)\r\n      .eq('is_primary', true)\r\n      .maybeSingle()\r\n\r\n    if (!selectError && existing?.id) return existing.id\r\n\r\n    const { data, error } = await supabase\r\n      .from('portfolios')\r\n      .insert({ user_id: userId, name: 'My Portfolio', is_primary: true })\r\n      .select('id')\r\n      .single()\r\n\r\n    if (error || !data?.id) throw error ?? new Error('Failed creating portfolio')\r\n    return data.id\r\n  } catch (err) {\r\n    console.error('getOrCreatePrimaryPortfolio error:', err)\r\n    throw err\r\n  }\r\n}\r\n\r\nexport async function fetchPortfolioSnapshot(userId: string): Promise<PortfolioSnapshot> {\r\n  try {\r\n    const portfolioId = await getOrCreatePrimaryPortfolio(userId)\r\n\r\n    const [{ data: cashRow, error: cashError }, { data: holdingRows, error: holdingError }] = await Promise.all([\r\n      supabase.from('cash_balances').select('id, balance').eq('portfolio_id', portfolioId).maybeSingle(),\r\n      supabase.from('holdings').select('id, symbol, name, shares, avg_price, current_price').eq('portfolio_id', portfolioId),\r\n    ])\r\n\r\n    if (cashError) console.error('fetchPortfolioSnapshot cash error:', cashError)\r\n    if (holdingError) console.error('fetchPortfolioSnapshot holding error:', holdingError)\r\n\r\n    let cashBalance = cashRow?.balance ?? 0\r\n    if (cashRow == null) {\r\n      // ensure a default cash row exists\r\n      const { error } = await supabase\r\n        .from('cash_balances')\r\n        .upsert({ portfolio_id: portfolioId, balance: 0, currency: 'USD' }, { onConflict: 'portfolio_id,currency' })\r\n      if (error) console.error('creating default cash row failed:', error)\r\n      cashBalance = 0\r\n    }\r\n\r\n    const holdings = (holdingRows ?? []).map(h => ({\r\n      id: h.id,\r\n      symbol: h.symbol,\r\n      name: h.name,\r\n      shares: Number(h.shares),\r\n      avgPrice: Number(h.avg_price),\r\n      currentPrice: Number(h.current_price ?? 0),\r\n    }))\r\n\r\n    return { portfolioId, cashBalance, holdings }\r\n  } catch (err) {\r\n    console.error('fetchPortfolioSnapshot error:', err)\r\n    throw err\r\n  }\r\n}\r\n\r\nexport async function upsertHolding(portfolioId: string, input: HoldingInput): Promise<void> {\r\n  const { error } = await supabase\r\n    .from('holdings')\r\n    .upsert(\r\n      {\r\n        portfolio_id: portfolioId,\r\n        symbol: input.symbol,\r\n        name: input.name,\r\n        shares: input.shares,\r\n        avg_price: input.avgPrice,\r\n        current_price: input.currentPrice ?? 0,\r\n      },\r\n      { onConflict: 'portfolio_id,symbol' }\r\n    )\r\n  if (error) {\r\n    console.error('upsertHolding error:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function updateHoldingShares(portfolioId: string, symbol: string, shares: number): Promise<void> {\r\n  const { error } = await supabase\r\n    .from('holdings')\r\n    .update({ shares })\r\n    .eq('portfolio_id', portfolioId)\r\n    .eq('symbol', symbol)\r\n  if (error) {\r\n    console.error('updateHoldingShares error:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function deleteHolding(portfolioId: string, symbol: string): Promise<void> {\r\n  const { error } = await supabase\r\n    .from('holdings')\r\n    .delete()\r\n    .eq('portfolio_id', portfolioId)\r\n    .eq('symbol', symbol)\r\n  if (error) {\r\n    console.error('deleteHolding error:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function setCashBalance(portfolioId: string, balance: number): Promise<void> {\r\n  const { error } = await supabase\r\n    .from('cash_balances')\r\n    .upsert(\r\n      { portfolio_id: portfolioId, balance, currency: 'USD' },\r\n      { onConflict: 'portfolio_id,currency' }\r\n    )\r\n  if (error) {\r\n    console.error('setCashBalance error:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function addTransaction(\r\n  portfolioId: string,\r\n  input: {\r\n    type: 'buy' | 'sell' | 'deposit' | 'withdraw'\r\n    symbol?: string | null\r\n    name?: string | null\r\n    shares?: number | null\r\n    price?: number | null\r\n    amount: number\r\n    description?: string | null\r\n  }\r\n): Promise<void> {\r\n  const { error } = await supabase.from('transactions').insert({\r\n    portfolio_id: portfolioId,\r\n    type: input.type,\r\n    symbol: input.symbol ?? null,\r\n    name: input.name ?? null,\r\n    shares: input.shares ?? null,\r\n    price: input.price ?? null,\r\n    amount: input.amount,\r\n    description: input.description ?? null,\r\n  })\r\n  if (error) {\r\n    console.error('addTransaction error:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAuBO,eAAe,4BAA4B,MAAc;IAC9D,IAAI;QACF,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC1D,IAAI,CAAC,cACL,MAAM,CAAC,MACP,EAAE,CAAC,WAAW,QACd,EAAE,CAAC,cAAc,MACjB,WAAW;QAEd,IAAI,CAAC,eAAe,UAAU,IAAI,OAAO,SAAS,EAAE;QAEpD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,cACL,MAAM,CAAC;YAAE,SAAS;YAAQ,MAAM;YAAgB,YAAY;QAAK,GACjE,MAAM,CAAC,MACP,MAAM;QAET,IAAI,SAAS,CAAC,MAAM,IAAI,MAAM,SAAS,IAAI,MAAM;QACjD,OAAO,KAAK,EAAE;IAChB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM;IACR;AACF;AAEO,eAAe,uBAAuB,MAAc;IACzD,IAAI;QACF,MAAM,cAAc,MAAM,4BAA4B;QAEtD,MAAM,CAAC,EAAE,MAAM,OAAO,EAAE,OAAO,SAAS,EAAE,EAAE,EAAE,MAAM,WAAW,EAAE,OAAO,YAAY,EAAE,CAAC,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC1G,yHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,iBAAiB,MAAM,CAAC,eAAe,EAAE,CAAC,gBAAgB,aAAa,WAAW;YAChG,yHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,YAAY,MAAM,CAAC,sDAAsD,EAAE,CAAC,gBAAgB;SAC3G;QAED,IAAI,WAAW,QAAQ,KAAK,CAAC,sCAAsC;QACnE,IAAI,cAAc,QAAQ,KAAK,CAAC,yCAAyC;QAEzE,IAAI,cAAc,SAAS,WAAW;QACtC,IAAI,WAAW,MAAM;YACnB,mCAAmC;YACnC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,iBACL,MAAM,CAAC;gBAAE,cAAc;gBAAa,SAAS;gBAAG,UAAU;YAAM,GAAG;gBAAE,YAAY;YAAwB;YAC5G,IAAI,OAAO,QAAQ,KAAK,CAAC,qCAAqC;YAC9D,cAAc;QAChB;QAEA,MAAM,WAAW,CAAC,eAAe,EAAE,EAAE,GAAG,CAAC,CAAA,IAAK,CAAC;gBAC7C,IAAI,EAAE,EAAE;gBACR,QAAQ,EAAE,MAAM;gBAChB,MAAM,EAAE,IAAI;gBACZ,QAAQ,OAAO,EAAE,MAAM;gBACvB,UAAU,OAAO,EAAE,SAAS;gBAC5B,cAAc,OAAO,EAAE,aAAa,IAAI;YAC1C,CAAC;QAED,OAAO;YAAE;YAAa;YAAa;QAAS;IAC9C,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;AACF;AAEO,eAAe,cAAc,WAAmB,EAAE,KAAmB;IAC1E,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,YACL,MAAM,CACL;QACE,cAAc;QACd,QAAQ,MAAM,MAAM;QACpB,MAAM,MAAM,IAAI;QAChB,QAAQ,MAAM,MAAM;QACpB,WAAW,MAAM,QAAQ;QACzB,eAAe,MAAM,YAAY,IAAI;IACvC,GACA;QAAE,YAAY;IAAsB;IAExC,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;AACF;AAEO,eAAe,oBAAoB,WAAmB,EAAE,MAAc,EAAE,MAAc;IAC3F,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,YACL,MAAM,CAAC;QAAE;IAAO,GAChB,EAAE,CAAC,gBAAgB,aACnB,EAAE,CAAC,UAAU;IAChB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM;IACR;AACF;AAEO,eAAe,cAAc,WAAmB,EAAE,MAAc;IACrE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,YACL,MAAM,GACN,EAAE,CAAC,gBAAgB,aACnB,EAAE,CAAC,UAAU;IAChB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;AACF;AAEO,eAAe,eAAe,WAAmB,EAAE,OAAe;IACvE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,iBACL,MAAM,CACL;QAAE,cAAc;QAAa;QAAS,UAAU;IAAM,GACtD;QAAE,YAAY;IAAwB;IAE1C,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,eAAe,eACpB,WAAmB,EACnB,KAQC;IAED,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,gBAAgB,MAAM,CAAC;QAC3D,cAAc;QACd,MAAM,MAAM,IAAI;QAChB,QAAQ,MAAM,MAAM,IAAI;QACxB,MAAM,MAAM,IAAI,IAAI;QACpB,QAAQ,MAAM,MAAM,IAAI;QACxB,OAAO,MAAM,KAAK,IAAI;QACtB,QAAQ,MAAM,MAAM;QACpB,aAAa,MAAM,WAAW,IAAI;IACpC;IACA,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF"}},
    {"offset": {"line": 4720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4726, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/app/portfolio/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { Dashboard } from \"@/components/layout/Dashboard\";\r\nimport { AssetDistribution } from \"@/components/features/portfolio/AssetDistribution\";\r\nimport { HoldingsTable } from \"@/components/features/portfolio/HoldingsTable\";\r\nimport { AddStockModal } from \"@/components/features/portfolio/AddStockModal\";\r\nimport { EditStockModal } from \"@/components/features/portfolio/EditStockModal\";\r\nimport { SellStockModal } from \"@/components/features/portfolio/SellStockModal\";\r\nimport { CashModal } from \"@/components/features/portfolio/CashModal\";\r\nimport { getStockQuote } from \"@/app/actions/stockActions\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { fetchPortfolioSnapshot, setCashBalance as setCashBalanceDb, upsertHolding, deleteHolding, updateHoldingShares, addTransaction as addTxn } from \"@/services/portfolio\";\r\n\r\ninterface PortfolioHolding {\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  value: number;\r\n  return: number;\r\n  returnPercentage: number;\r\n}\r\n\r\ninterface PortfolioMetrics {\r\n  totalValue: number;\r\n  totalReturn: number;\r\n  returnPercentage: number;\r\n  todayReturn: number;\r\n  todayPercentage: number;\r\n  cashBalance: number;\r\n}\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: 'buy' | 'sell' | 'deposit' | 'withdraw';\r\n  symbol?: string;\r\n  name?: string;\r\n  shares?: number;\r\n  price?: number;\r\n  amount: number;\r\n  timestamp: Date;\r\n  description: string;\r\n}\r\n\r\nexport default function PortfolioPage() {\r\n  const { user } = useAuth()\r\n  const [holdings, setHoldings] = useState<PortfolioHolding[]>([]);\r\n  const [cashBalance, setCashBalance] = useState<number>(0);\r\n  const [metrics, setMetrics] = useState<PortfolioMetrics>({\r\n    totalValue: 0,\r\n    totalReturn: 0,\r\n    returnPercentage: 0,\r\n    todayReturn: 0,\r\n    todayPercentage: 0,\r\n    cashBalance: 0,\r\n  });\r\n  const [isAddStockModalOpen, setIsAddStockModal] = useState(false);\r\n  const [isEditStockModalOpen, setIsEditStockModalOpen] = useState(false);\r\n  const [isSellStockModalOpen, setIsSellStockModalOpen] = useState(false);\r\n  const [isCashModalOpen, setIsCashModalOpen] = useState(false);\r\n  const [cashAction, setCashAction] = useState<'deposit' | 'withdraw'>('deposit');\r\n  const [selectedHolding, setSelectedHolding] = useState<PortfolioHolding | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Calculate metrics based on current holdings and cash\r\n  const calculateMetrics = useCallback((currentHoldings: PortfolioHolding[], currentCash: number) => {\r\n    const stockValue = currentHoldings.reduce((sum, holding) => sum + holding.value, 0);\r\n    const totalValue = stockValue + currentCash;\r\n    const totalCost = currentHoldings.reduce((sum, holding) => sum + (holding.shares * holding.avgPrice), 0);\r\n    const totalReturn = stockValue - totalCost;\r\n    const returnPercentage = totalCost > 0 ? (totalReturn / totalCost) * 100 : 0;\r\n\r\n    setMetrics({\r\n      totalValue,\r\n      totalReturn,\r\n      returnPercentage,\r\n      todayReturn: 0,\r\n      todayPercentage: 0,\r\n      cashBalance: currentCash,\r\n    });\r\n  }, []);\r\n\r\n  // Persist portfolio to Supabase for signed-in users\r\n  const savePortfolioData = useCallback(async (holdingsData: PortfolioHolding[], cashData: number) => {\r\n    try {\r\n      if (!user) return\r\n      const snapshot = await fetchPortfolioSnapshot(user.id)\r\n      await setCashBalanceDb(snapshot.portfolioId, cashData)\r\n      await Promise.all(\r\n        holdingsData.map(h =>\r\n          upsertHolding(snapshot.portfolioId, {\r\n            symbol: h.symbol,\r\n            name: h.name,\r\n            shares: h.shares,\r\n            avgPrice: h.avgPrice,\r\n            currentPrice: h.currentPrice,\r\n          })\r\n        )\r\n      )\r\n    } catch (error) {\r\n      console.error('Error saving portfolio data:', error)\r\n    }\r\n  }, [user]);\r\n\r\n  // Add transaction to history (Supabase)\r\n  const addTransactionToHistory = useCallback(async (t: Omit<Transaction, 'id' | 'timestamp'>) => {\r\n    try {\r\n      if (!user) return\r\n      const snapshot = await fetchPortfolioSnapshot(user.id)\r\n      await addTxn(snapshot.portfolioId, {\r\n        type: t.type,\r\n        symbol: t.symbol,\r\n        name: t.name,\r\n        shares: t.shares,\r\n        price: t.price,\r\n        amount: t.amount,\r\n        description: t.description,\r\n      })\r\n    } catch (error) {\r\n      console.error('Error saving transaction history:', error)\r\n    }\r\n  }, [user]);\r\n\r\n  // Load portfolio data from Supabase for signed-in users\r\n  const loadPortfolioData = useCallback(async () => {\r\n    try {\r\n      if (!user) {\r\n        setHoldings([])\r\n        setCashBalance(0)\r\n        setIsLoading(false)\r\n        return\r\n      }\r\n      const snapshot = await fetchPortfolioSnapshot(user.id)\r\n      const mapped: PortfolioHolding[] = snapshot.holdings.map(h => {\r\n        const value = h.shares * (h.currentPrice ?? 0)\r\n        const cost = h.shares * h.avgPrice\r\n        const ret = value - cost\r\n        const retPct = cost > 0 ? (ret / cost) * 100 : 0\r\n        return {\r\n          symbol: h.symbol,\r\n          name: h.name,\r\n          shares: h.shares,\r\n          avgPrice: h.avgPrice,\r\n          currentPrice: h.currentPrice ?? 0,\r\n          value,\r\n          return: ret,\r\n          returnPercentage: retPct,\r\n        }\r\n      })\r\n      setHoldings(mapped)\r\n      setCashBalance(snapshot.cashBalance)\r\n      calculateMetrics(mapped, snapshot.cashBalance)\r\n    } catch (error) {\r\n      console.error('Error loading portfolio data:', error)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [user, calculateMetrics]);\r\n\r\n  // Update current prices for all holdings\r\n  const updateCurrentPrices = useCallback(async (currentHoldings: PortfolioHolding[]) => {\r\n    if (currentHoldings.length === 0) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const updatedHoldings = await Promise.all(\r\n        currentHoldings.map(async (holding) => {\r\n          try {\r\n            const quote = await getStockQuote(holding.symbol);\r\n            const currentPrice = quote.price;\r\n            const value = holding.shares * currentPrice;\r\n            const totalCost = holding.shares * holding.avgPrice;\r\n            const returnAmount = value - totalCost;\r\n            const returnPercentage = (totalCost > 0) ? (returnAmount / totalCost) * 100 : 0;\r\n\r\n            return {\r\n              ...holding,\r\n              currentPrice,\r\n              value,\r\n              return: returnAmount,\r\n              returnPercentage,\r\n            };\r\n          } catch (error) {\r\n            console.error(`Error fetching price for ${holding.symbol}:`, error);\r\n            return holding;\r\n          }\r\n        })\r\n      );\r\n\r\n      setHoldings(updatedHoldings);\r\n      calculateMetrics(updatedHoldings, cashBalance);\r\n      savePortfolioData(updatedHoldings, cashBalance);\r\n    } catch (error) {\r\n      console.error('Error updating current prices:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [cashBalance, calculateMetrics, savePortfolioData]);\r\n\r\n  // Load data when auth/user is ready or changes\r\n  useEffect(() => {\r\n    loadPortfolioData();\r\n  }, [user, loadPortfolioData]);\r\n\r\n  // Update prices when component mounts and we have holdings\r\n  useEffect(() => {\r\n    if (holdings.length > 0) {\r\n      updateCurrentPrices(holdings);\r\n    }\r\n  }, []); // Only run once on mount\r\n\r\n  // Handle adding a new stock\r\n  const handleAddStock = useCallback(async (newHolding: Omit<PortfolioHolding, 'currentPrice' | 'value' | 'return' | 'returnPercentage'>) => {\r\n    try {\r\n      // Get current price for the new stock\r\n      const quote = await getStockQuote(newHolding.symbol);\r\n      const currentPrice = quote.price;\r\n      const value = newHolding.shares * currentPrice;\r\n      const totalCost = newHolding.shares * newHolding.avgPrice;\r\n      const returnAmount = value - totalCost;\r\n      const returnPercentage = (totalCost > 0) ? (returnAmount / totalCost) * 100 : 0;\r\n\r\n      const completeHolding: PortfolioHolding = {\r\n        ...newHolding,\r\n        currentPrice,\r\n        value,\r\n        return: returnAmount,\r\n        returnPercentage,\r\n      };\r\n\r\n      const updatedHoldings = [...holdings, completeHolding];\r\n      setHoldings(updatedHoldings);\r\n      calculateMetrics(updatedHoldings, cashBalance);\r\n      savePortfolioData(updatedHoldings, cashBalance);\r\n      \r\n      // Add transaction to history\r\n      addTransactionToHistory({\r\n        type: 'buy',\r\n        symbol: newHolding.symbol,\r\n        name: newHolding.name,\r\n        shares: newHolding.shares,\r\n        price: newHolding.avgPrice,\r\n        amount: newHolding.shares * newHolding.avgPrice,\r\n        description: `Bought ${newHolding.shares} shares of ${newHolding.symbol} at $${newHolding.avgPrice.toFixed(2)}`\r\n      });\r\n      \r\n      setIsAddStockModal(false);\r\n    } catch (error) {\r\n      console.error('Error adding stock:', error);\r\n      alert('Error adding stock. Please try again.');\r\n    }\r\n  }, [holdings, cashBalance, calculateMetrics, savePortfolioData, addTransactionToHistory]);\r\n\r\n  const handleSellStock = useCallback((symbol: string, sharesToSell: number, sellPrice: number) => {\r\n    const holding = holdings.find(h => h.symbol === symbol);\r\n    if (!holding) return;\r\n\r\n    const saleValue = sharesToSell * sellPrice;\r\n    const remainingShares = holding.shares - sharesToSell;\r\n\r\n    let updatedHoldings: PortfolioHolding[];\r\n    if (remainingShares === 0) {\r\n      // Remove the entire position\r\n      updatedHoldings = holdings.filter(h => h.symbol !== symbol);\r\n    } else {\r\n      // Update the position with remaining shares\r\n      updatedHoldings = holdings.map(h =>\r\n        h.symbol === symbol\r\n          ? { ...h, shares: remainingShares }\r\n          : h\r\n      );\r\n    }\r\n\r\n    // Add cash from sale\r\n    const newCashBalance = cashBalance + saleValue;\r\n    \r\n    setHoldings(updatedHoldings);\r\n    setCashBalance(newCashBalance);\r\n    calculateMetrics(updatedHoldings, newCashBalance);\r\n    savePortfolioData(updatedHoldings, newCashBalance);\r\n\r\n    // Add transaction to history\r\n    addTransactionToHistory({\r\n      type: 'sell',\r\n      symbol: holding.symbol,\r\n      name: holding.name,\r\n      shares: sharesToSell,\r\n      price: sellPrice,\r\n      amount: saleValue,\r\n      description: `Sold ${sharesToSell} shares of ${holding.symbol} at $${sellPrice.toFixed(2)}`\r\n    });\r\n\r\n    setIsSellStockModalOpen(false);\r\n    setSelectedHolding(null);\r\n  }, [holdings, cashBalance, calculateMetrics, savePortfolioData, addTransactionToHistory]);\r\n\r\n  const handleUpdateStock = useCallback((symbol: string, updatedHolding: Omit<PortfolioHolding, 'currentPrice' | 'value' | 'return' | 'returnPercentage'>) => {\r\n    const updatedHoldings = holdings.map(holding =>\r\n      holding.symbol === symbol\r\n        ? { ...updatedHolding, currentPrice: holding.currentPrice, value: 0, return: 0, returnPercentage: 0 }\r\n        : holding\r\n    );\r\n    setHoldings(updatedHoldings);\r\n    calculateMetrics(updatedHoldings, cashBalance);\r\n    savePortfolioData(updatedHoldings, cashBalance);\r\n    setIsEditStockModalOpen(false);\r\n    setSelectedHolding(null);\r\n  }, [holdings, cashBalance, calculateMetrics, savePortfolioData]);\r\n\r\n  const handleRemoveStock = useCallback((symbol: string) => {\r\n    const holding = holdings.find(h => h.symbol === symbol);\r\n    if (holding) {\r\n      // Add transaction to history for removal\r\n      addTransactionToHistory({\r\n        type: 'sell',\r\n        symbol: holding.symbol,\r\n        name: holding.name,\r\n        shares: holding.shares,\r\n        price: holding.currentPrice,\r\n        amount: holding.value,\r\n        description: `Removed ${holding.shares} shares of ${holding.symbol} from portfolio`\r\n      });\r\n    }\r\n\r\n    const updatedHoldings = holdings.filter(holding => holding.symbol !== symbol);\r\n    setHoldings(updatedHoldings);\r\n    calculateMetrics(updatedHoldings, cashBalance);\r\n    savePortfolioData(updatedHoldings, cashBalance);\r\n  }, [holdings, cashBalance, calculateMetrics, savePortfolioData, addTransactionToHistory]);\r\n\r\n  const handleEditStock = useCallback((holding: PortfolioHolding) => {\r\n    setSelectedHolding(holding);\r\n    setIsEditStockModalOpen(true);\r\n  }, []);\r\n\r\n  const handleSellStockClick = useCallback((holding: PortfolioHolding) => {\r\n    setSelectedHolding(holding);\r\n    setIsSellStockModalOpen(true);\r\n  }, []);\r\n\r\n  const handleCashAction = useCallback((action: 'deposit' | 'withdraw') => {\r\n    setCashAction(action);\r\n    setIsCashModalOpen(true);\r\n  }, []);\r\n\r\n  const handleCashTransaction = useCallback(async (amount: number) => {\r\n    let newCashBalance = cashBalance;\r\n\r\n    if (cashAction === 'deposit') {\r\n      newCashBalance += amount;\r\n    } else if (cashAction === 'withdraw') {\r\n      if (amount > cashBalance) {\r\n        alert('Insufficient cash balance for withdrawal');\r\n        return;\r\n      }\r\n      newCashBalance -= amount;\r\n    }\r\n\r\n    setCashBalance(newCashBalance);\r\n    try {\r\n      if (user) {\r\n        const snapshot = await fetchPortfolioSnapshot(user.id)\r\n        await setCashBalanceDb(snapshot.portfolioId, newCashBalance)\r\n      }\r\n    } catch {}\r\n    calculateMetrics(holdings, newCashBalance);\r\n\r\n    // Add transaction to history\r\n    addTransactionToHistory({\r\n      type: cashAction,\r\n      amount: amount,\r\n      description: `${cashAction === 'deposit' ? 'Deposited' : 'Withdrew'} $${amount.toLocaleString()}`\r\n    });\r\n\r\n    setIsCashModalOpen(false);\r\n  }, [user, cashBalance, cashAction, holdings, calculateMetrics, addTransactionToHistory]);\r\n\r\n  const handleQuickAction = useCallback((action: string) => {\r\n    switch (action) {\r\n      case 'deposit':\r\n        handleCashAction('deposit');\r\n        break;\r\n      case 'buy':\r\n        setIsAddStockModal(true);\r\n        break;\r\n      case 'sell':\r\n        if (holdings.length === 0) {\r\n          alert('No stocks to sell. Add some stocks first.');\r\n          return;\r\n        }\r\n        // Show a simple alert for now - in a real app, you might want to show a stock selection modal\r\n        alert('Select a stock from your holdings to sell');\r\n        break;\r\n      case 'withdraw':\r\n        handleCashAction('withdraw');\r\n        break;\r\n    }\r\n  }, [handleCashAction, holdings]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Dashboard>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-text-secondary\">Loading portfolio...</div>\r\n        </div>\r\n      </Dashboard>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dashboard>\r\n      <div className=\"space-y-8\">\r\n        {/* Portfolio Summary */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Total Value</h3>\r\n            <div className=\"text-3xl font-bold\">${metrics.totalValue.toLocaleString()}</div>\r\n            <div className={`text-sm ${metrics.totalReturn >= 0 ? 'text-success' : 'text-error'}`}>\r\n              {metrics.totalReturn >= 0 ? '+' : ''}${metrics.totalReturn.toFixed(2)} ({metrics.returnPercentage.toFixed(2)}%)\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Total Return</h3>\r\n            <div className={`text-3xl font-bold ${metrics.totalReturn >= 0 ? 'text-success' : 'text-error'}`}>\r\n              {metrics.totalReturn >= 0 ? '+' : ''}${metrics.totalReturn.toFixed(2)}\r\n            </div>\r\n            <div className=\"text-sm text-text-secondary\">\r\n              {metrics.returnPercentage.toFixed(2)}% return\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Cash Balance</h3>\r\n            <div className=\"text-3xl font-bold text-success\">${cashBalance.toLocaleString()}</div>\r\n            <div className=\"text-sm text-text-secondary\">\r\n              Available for trading\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Holdings</h3>\r\n            <div className=\"text-3xl font-bold\">{holdings.length}</div>\r\n            <div className=\"text-sm text-text-secondary\">Different stocks</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Asset Distribution */}\r\n          <div className=\"lg:col-span-2\">\r\n            <AssetDistribution holdings={holdings} totalValue={metrics.totalValue} cashBalance={cashBalance} />\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          <div>\r\n            <h2 className=\"text-lg font-semibold mb-4\">Quick Actions</h2>\r\n            <div className=\"space-y-3\">\r\n              <button\r\n                onClick={() => handleQuickAction('deposit')}\r\n                className=\"w-full bg-accent text-white py-3 px-4 rounded-lg hover:bg-accent/90 transition-colors\"\r\n              >\r\n                Deposit Funds\r\n              </button>\r\n              <button\r\n                onClick={() => handleQuickAction('buy')}\r\n                className=\"w-full bg-success text-white py-3 px-4 rounded-lg hover:bg-success/90 transition-colors\"\r\n              >\r\n                Buy Stocks\r\n              </button>\r\n              <button\r\n                onClick={() => handleQuickAction('sell')}\r\n                className=\"w-full bg-error text-white py-3 px-4 rounded-lg hover:bg-error/90 transition-colors\"\r\n              >\r\n                Sell Stocks\r\n              </button>\r\n              <button\r\n                onClick={() => handleQuickAction('withdraw')}\r\n                className=\"w-full bg-card text-text-primary py-3 px-4 rounded-lg hover:bg-background transition-colors border border-card\"\r\n              >\r\n                Withdraw Funds\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Holdings Table */}\r\n        <div>\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-lg font-semibold\">Asset Holdings</h2>\r\n            <button\r\n              onClick={() => setIsAddStockModal(true)}\r\n              className=\"bg-accent text-white px-4 py-2 rounded-lg hover:bg-accent/90 transition-colors\"\r\n            >\r\n              Add Stock\r\n            </button>\r\n          </div>\r\n          <HoldingsTable\r\n            holdings={holdings}\r\n            onRemoveStock={handleRemoveStock}\r\n            onEditStock={handleEditStock}\r\n            onSellStock={handleSellStockClick}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add Stock Modal */}\r\n      <AddStockModal\r\n        isOpen={isAddStockModalOpen}\r\n        onClose={() => setIsAddStockModal(false)}\r\n        onAddStock={handleAddStock}\r\n        existingHoldings={holdings}\r\n      />\r\n\r\n      {/* Edit Stock Modal */}\r\n      <EditStockModal\r\n        isOpen={isEditStockModalOpen}\r\n        onClose={() => {\r\n          setIsEditStockModalOpen(false);\r\n          setSelectedHolding(null);\r\n        }}\r\n        onUpdateStock={handleUpdateStock}\r\n        holding={selectedHolding}\r\n      />\r\n\r\n      {/* Sell Stock Modal */}\r\n      <SellStockModal\r\n        isOpen={isSellStockModalOpen}\r\n        onClose={() => {\r\n          setIsSellStockModalOpen(false);\r\n          setSelectedHolding(null);\r\n        }}\r\n        onSellStock={handleSellStock}\r\n        holding={selectedHolding}\r\n      />\r\n\r\n      {/* Cash Modal */}\r\n      <CashModal\r\n        isOpen={isCashModalOpen}\r\n        onClose={() => setIsCashModalOpen(false)}\r\n        onTransaction={handleCashTransaction}\r\n        action={cashAction}\r\n        currentBalance={cashBalance}\r\n      />\r\n    </Dashboard>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 5566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}