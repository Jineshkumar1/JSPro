{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/app/actions/stockActions.ts"],"sourcesContent":["'use server';\r\n\r\nimport yahooFinance from 'yahoo-finance2';\r\n\r\n// Configure yahoo-finance2\r\nyahooFinance.setGlobalConfig({\r\n  queue: {\r\n    concurrency: 5,\r\n    timeout: 30000,\r\n  },\r\n});\r\n\r\nexport interface StockQuote {\r\n  symbol: string;\r\n  name: string;\r\n  price: number;\r\n  change: number;\r\n  changePercentage: number;\r\n  volume: number;\r\n  marketCap: number;\r\n}\r\n\r\nexport interface HistoricalData {\r\n  date: Date;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n}\r\n\r\nexport interface SearchResult {\r\n  symbol: string;\r\n  shortname?: string;\r\n  longname?: string;\r\n  exchange: string;\r\n  typeDisp: string;\r\n  quoteType: string;\r\n}\r\n\r\nexport async function getStockQuote(symbol: string): Promise<StockQuote> {\r\n  try {\r\n    // Add retry logic and better error handling\r\n    let retries = 3;\r\n    let lastError: Error | null = null;\r\n\r\n    while (retries > 0) {\r\n      try {\r\n        const quote = await yahooFinance.quote(symbol, {\r\n          fields: [\r\n            'symbol',\r\n            'longName',\r\n            'shortName',\r\n            'regularMarketPrice',\r\n            'regularMarketChange',\r\n            'regularMarketChangePercent',\r\n            'regularMarketVolume',\r\n            'marketCap'\r\n          ]\r\n        });\r\n\r\n        if (!quote) {\r\n          throw new Error(`No data received for ${symbol}`);\r\n        }\r\n\r\n        return {\r\n          symbol: quote.symbol || symbol,\r\n          name: quote.longName || quote.shortName || symbol,\r\n          price: Number(quote.regularMarketPrice) || 0,\r\n          change: Number(quote.regularMarketChange) || 0,\r\n          changePercentage: Number(quote.regularMarketChangePercent) || 0,\r\n          volume: Number(quote.regularMarketVolume) || 0,\r\n          marketCap: Number(quote.marketCap) || 0,\r\n        };\r\n      } catch (error) {\r\n        lastError = error as Error;\r\n        retries--;\r\n        \r\n        if (retries > 0) {\r\n          // Wait before retrying\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n    }\r\n\r\n    // If all retries failed, return a fallback quote\r\n    console.warn(`Failed to fetch quote for ${symbol} after retries, using fallback data`);\r\n    return {\r\n      symbol: symbol,\r\n      name: symbol,\r\n      price: 0,\r\n      change: 0,\r\n      changePercentage: 0,\r\n      volume: 0,\r\n      marketCap: 0,\r\n    };\r\n  } catch (error) {\r\n    console.error(`Error fetching quote for ${symbol}:`, error);\r\n    // Return fallback data instead of throwing\r\n    return {\r\n      symbol: symbol,\r\n      name: symbol,\r\n      price: 0,\r\n      change: 0,\r\n      changePercentage: 0,\r\n      volume: 0,\r\n      marketCap: 0,\r\n    };\r\n  }\r\n}\r\n\r\nexport async function getHistoricalData(\r\n  symbol: string,\r\n  period: '1d' | '5d' | '1mo' | '3mo' | '6mo' | '1y' = '1mo'\r\n): Promise<HistoricalData[]> {\r\n  try {\r\n    // Using chart instead of historical as recommended\r\n    const result = await yahooFinance.chart(symbol, {\r\n      period1: getStartDate(period),\r\n      period2: new Date(),\r\n      interval: '1d',\r\n      includePrePost: false,\r\n    });\r\n\r\n    if (!result.quotes || result.quotes.length === 0) {\r\n      throw new Error(`No historical data received for ${symbol}`);\r\n    }\r\n\r\n    return result.quotes.map(quote => ({\r\n      date: quote.date,\r\n      open: Number(quote.open) || 0,\r\n      high: Number(quote.high) || 0,\r\n      low: Number(quote.low) || 0,\r\n      close: Number(quote.close) || 0,\r\n      volume: Number(quote.volume) || 0,\r\n    }));\r\n  } catch (error) {\r\n    console.error(`Error fetching historical data for ${symbol}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function searchStocks(query: string): Promise<SearchResult[]> {\r\n  try {\r\n    const results = await yahooFinance.search(query);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return results.quotes\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      .filter((quote: any) => \r\n        quote.quoteType === 'EQUITY' || quote.quoteType === 'ETF'\r\n      )\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      .map((quote: any) => ({\r\n        symbol: quote.symbol || '',\r\n        shortname: quote.shortname,\r\n        longname: quote.longname,\r\n        exchange: quote.exchange || '',\r\n        typeDisp: quote.typeDisp || '',\r\n        quoteType: quote.quoteType || '',\r\n      }));\r\n  } catch (error) {\r\n    console.error(`Error searching stocks with query ${query}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getTrendingStocks(): Promise<StockQuote[]> {\r\n  // FAANG + Popular tech stocks\r\n  const trendingSymbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA', 'NFLX'];\r\n  \r\n  try {\r\n    const quotes = await Promise.all(\r\n      trendingSymbols.map(async symbol => {\r\n        try {\r\n          return await getStockQuote(symbol);\r\n        } catch (error) {\r\n          console.error(`Error fetching ${symbol}:`, error);\r\n          // Return a placeholder if individual stock fetch fails\r\n          return {\r\n            symbol,\r\n            name: symbol,\r\n            price: 0,\r\n            change: 0,\r\n            changePercentage: 0,\r\n            volume: 0,\r\n            marketCap: 0\r\n          };\r\n        }\r\n      })\r\n    );\r\n    \r\n    // Filter out any failed fetches that returned placeholder data\r\n    const validQuotes = quotes.filter(quote => quote.price > 0);\r\n    \r\n    if (validQuotes.length === 0) {\r\n      throw new Error('Failed to fetch any valid stock data');\r\n    }\r\n    \r\n    return validQuotes;\r\n  } catch (error) {\r\n    console.error('Error fetching trending stocks:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getDailyGainers(): Promise<StockQuote[]> {\r\n  // Popular stocks that typically have significant daily movements\r\n  const gainerSymbols = ['NVDA', 'AMD', 'TSLA', 'META', 'NFLX', 'CRM', 'ADBE', 'PYPL'];\r\n  \r\n  try {\r\n    const quotes = await Promise.all(\r\n      gainerSymbols.map(async symbol => {\r\n        try {\r\n          return await getStockQuote(symbol);\r\n        } catch (error) {\r\n          console.error(`Error fetching ${symbol}:`, error);\r\n          return {\r\n            symbol,\r\n            name: symbol,\r\n            price: 0,\r\n            change: 0,\r\n            changePercentage: 0,\r\n            volume: 0,\r\n            marketCap: 0\r\n          };\r\n        }\r\n      })\r\n    );\r\n    \r\n    const validQuotes = quotes.filter(quote => quote.price > 0);\r\n    \r\n    // Sort by percentage gain (highest first)\r\n    return validQuotes\r\n      .filter(quote => quote.changePercentage > 0)\r\n      .sort((a, b) => b.changePercentage - a.changePercentage)\r\n      .slice(0, 6); // Return top 6 gainers\r\n  } catch (error) {\r\n    console.error('Error fetching daily gainers:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getDailyLosers(): Promise<StockQuote[]> {\r\n  // Popular stocks that typically have significant daily movements\r\n  const loserSymbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA', 'NFLX'];\r\n  \r\n  try {\r\n    const quotes = await Promise.all(\r\n      loserSymbols.map(async symbol => {\r\n        try {\r\n          return await getStockQuote(symbol);\r\n        } catch (error) {\r\n          console.error(`Error fetching ${symbol}:`, error);\r\n          return {\r\n            symbol,\r\n            name: symbol,\r\n            price: 0,\r\n            change: 0,\r\n            changePercentage: 0,\r\n            volume: 0,\r\n            marketCap: 0\r\n          };\r\n        }\r\n      })\r\n    );\r\n    \r\n    const validQuotes = quotes.filter(quote => quote.price > 0);\r\n    \r\n    // Sort by percentage loss (lowest first)\r\n    return validQuotes\r\n      .filter(quote => quote.changePercentage < 0)\r\n      .sort((a, b) => a.changePercentage - b.changePercentage)\r\n      .slice(0, 6); // Return top 6 losers\r\n  } catch (error) {\r\n    console.error('Error fetching daily losers:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Helper function to calculate start date based on period\r\nfunction getStartDate(period: '1d' | '5d' | '1mo' | '3mo' | '6mo' | '1y'): Date {\r\n  const now = new Date();\r\n  switch (period) {\r\n    case '1d':\r\n      return new Date(now.setDate(now.getDate() - 1));\r\n    case '5d':\r\n      return new Date(now.setDate(now.getDate() - 5));\r\n    case '1mo':\r\n      return new Date(now.setMonth(now.getMonth() - 1));\r\n    case '3mo':\r\n      return new Date(now.setMonth(now.getMonth() - 3));\r\n    case '6mo':\r\n      return new Date(now.setMonth(now.getMonth() - 6));\r\n    case '1y':\r\n      return new Date(now.setFullYear(now.getFullYear() - 1));\r\n    default:\r\n      return new Date(now.setMonth(now.getMonth() - 1));\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;IAwCsB;IAuEA;IA+BA;IAwBA;IAuCA;IAqCA"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/SearchBar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Search, X, TrendingUp } from \"lucide-react\";\r\nimport { searchStocks, SearchResult } from \"@/app/actions/stockActions\";\r\n\r\ninterface SearchBarProps {\r\n  onStockSelect?: (symbol: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nexport function SearchBar({ onStockSelect, placeholder = \"Search stocks...\" }: SearchBarProps) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState<SearchResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const searchRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Popular stocks for quick access\r\n  const popularStocks = [\r\n    { symbol: \"AAPL\", name: \"Apple Inc.\" },\r\n    { symbol: \"MSFT\", name: \"Microsoft Corporation\" },\r\n    { symbol: \"GOOGL\", name: \"Alphabet Inc.\" },\r\n    { symbol: \"AMZN\", name: \"Amazon.com Inc.\" },\r\n    { symbol: \"META\", name: \"Meta Platforms Inc.\" },\r\n    { symbol: \"TSLA\", name: \"Tesla Inc.\" },\r\n    { symbol: \"NVDA\", name: \"NVIDIA Corporation\" },\r\n    { symbol: \"NFLX\", name: \"Netflix Inc.\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {\r\n        setShowResults(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchTimeout = setTimeout(async () => {\r\n      if (query.trim().length >= 2) {\r\n        setIsLoading(true);\r\n        try {\r\n          const searchResults = await searchStocks(query);\r\n          setResults(searchResults.slice(0, 10)); // Limit to 10 results\r\n          setShowResults(true);\r\n        } catch (error) {\r\n          console.error(\"Search error:\", error);\r\n          setResults([]);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      } else {\r\n        setResults([]);\r\n        setShowResults(false);\r\n      }\r\n    }, 300); // Debounce search\r\n\r\n    return () => clearTimeout(searchTimeout);\r\n  }, [query]);\r\n\r\n  const handleStockSelect = (symbol: string) => {\r\n    setQuery(symbol);\r\n    setShowResults(false);\r\n    if (onStockSelect) {\r\n      onStockSelect(symbol);\r\n    } else {\r\n      // Default behavior: open stock detail modal\r\n      window.open(`/stock/${symbol}`, '_blank');\r\n    }\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setQuery(\"\");\r\n    setResults([]);\r\n    setShowResults(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={searchRef} className=\"relative w-full max-w-md\">\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary\" />\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder={placeholder}\r\n          className=\"h-10 w-full rounded-lg bg-card pl-10 pr-10 text-sm text-text-primary placeholder:text-text-secondary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n          onFocus={() => setShowResults(true)}\r\n        />\r\n        {query && (\r\n          <button\r\n            onClick={clearSearch}\r\n            className=\"absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-text-secondary hover:text-text-primary\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Search Results Dropdown */}\r\n      {showResults && (\r\n        <div className=\"absolute top-full z-50 mt-1 w-full rounded-lg bg-card shadow-lg ring-1 ring-black/5\">\r\n          {isLoading ? (\r\n            <div className=\"p-4 text-center text-sm text-text-secondary\">\r\n              Searching...\r\n            </div>\r\n          ) : results.length > 0 ? (\r\n            <div className=\"max-h-64 overflow-y-auto\">\r\n              {results.map((result, index) => (\r\n                <button\r\n                  key={`${result.symbol}-${index}`}\r\n                  onClick={() => handleStockSelect(result.symbol)}\r\n                  className=\"flex w-full items-center gap-3 p-3 text-left hover:bg-background transition-colors\"\r\n                >\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"font-medium text-text-primary\">\r\n                      {result.symbol}\r\n                    </div>\r\n                    <div className=\"text-xs text-text-secondary\">\r\n                      {result.shortname || result.longname}\r\n                    </div>\r\n                    <div className=\"text-xs text-text-secondary\">\r\n                      {result.exchange} • {result.typeDisp}\r\n                    </div>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          ) : query.length >= 2 ? (\r\n            <div className=\"p-4 text-center text-sm text-text-secondary\">\r\n              No stocks found\r\n            </div>\r\n          ) : (\r\n            <div className=\"p-4\">\r\n              <div className=\"mb-2 text-sm font-medium text-text-primary\">\r\n                Popular Stocks\r\n              </div>\r\n              <div className=\"space-y-1\">\r\n                {popularStocks.map((stock) => (\r\n                  <button\r\n                    key={stock.symbol}\r\n                    onClick={() => handleStockSelect(stock.symbol)}\r\n                    className=\"flex w-full items-center gap-2 rounded p-2 text-left hover:bg-background transition-colors\"\r\n                  >\r\n                    <TrendingUp className=\"h-4 w-4 text-accent\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-text-primary\">\r\n                        {stock.symbol}\r\n                      </div>\r\n                      <div className=\"text-xs text-text-secondary\">\r\n                        {stock.name}\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/LoadingSpinner.tsx"],"sourcesContent":["interface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  className?: string;\r\n}\r\n\r\nexport function LoadingSpinner({ size = 'md', className = '' }: LoadingSpinnerProps) {\r\n  const sizeClasses = {\r\n    sm: 'h-4 w-4',\r\n    md: 'h-6 w-6',\r\n    lg: 'h-8 w-8',\r\n  };\r\n\r\n  return (\r\n    <div className={`animate-spin rounded-full border-2 border-text-secondary border-t-accent ${sizeClasses[size]} ${className}`} />\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAKO,SAAS,eAAe,EAAE,OAAO,IAAI,EAAE,YAAY,EAAE,EAAuB;IACjF,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QAAI,WAAW,CAAC,yEAAyE,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW;;;;;;AAEhI;KAVgB"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/features/StockDetailModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { X, ExternalLink, TrendingUp, TrendingDown, Building2, Globe } from \"lucide-react\";\r\nimport { getStockQuote, getHistoricalData } from \"@/app/actions/stockActions\";\r\nimport { LoadingSpinner } from \"./LoadingSpinner\";\r\n\r\ninterface StockDetailModalProps {\r\n  symbol: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\ninterface QuoteData {\r\n  symbol: string;\r\n  name: string;\r\n  price: number;\r\n  change: number;\r\n  changePercentage: number;\r\n  volume: number;\r\n  marketCap: number;\r\n}\r\n\r\nexport function StockDetailModal({ symbol, isOpen, onClose }: StockDetailModalProps) {\r\n  const [quote, setQuote] = useState<QuoteData | null>(null);\r\n  const [chartData, setChartData] = useState<number[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && symbol) {\r\n      fetchStockData();\r\n    }\r\n  }, [isOpen, symbol]);\r\n\r\n  const fetchStockData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const [quoteData, historicalData] = await Promise.all([\r\n        getStockQuote(symbol),\r\n        getHistoricalData(symbol, '1mo'),\r\n      ]);\r\n\r\n      setQuote(quoteData);\r\n      setChartData(historicalData.map(item => item.close));\r\n    } catch (err) {\r\n      console.error('Error fetching stock data:', err);\r\n      setError('Failed to load stock data');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const isPositive = quote?.change ? quote.change >= 0 : false;\r\n\r\n  const renderChart = () => {\r\n    if (chartData.length === 0) {\r\n      return (\r\n        <div className=\"flex items-center justify-center h-64 text-text-secondary\">\r\n          No chart data available\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const max = Math.max(...chartData);\r\n    const min = Math.min(...chartData);\r\n    const range = max - min;\r\n\r\n    if (range === 0) {\r\n      return (\r\n        <div className=\"flex items-center justify-center h-64 text-text-secondary\">\r\n          Flat line\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        className=\"w-full h-64\"\r\n        viewBox={`0 0 ${chartData.length - 1} ${range}`}\r\n        preserveAspectRatio=\"none\"\r\n      >\r\n        <path\r\n          d={`M 0 ${chartData[0] - min} ${chartData\r\n            .slice(1)\r\n            .map((point, i) => `L ${i + 1} ${point - min}`)\r\n            .join(\" \")}`}\r\n          fill=\"none\"\r\n          stroke={isPositive ? \"#00C853\" : \"#FF3D00\"}\r\n          strokeWidth=\"2\"\r\n          vectorEffect=\"non-scaling-stroke\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"relative w-full max-w-4xl max-h-[90vh] overflow-y-auto bg-background rounded-lg shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-card\">\r\n          <div>\r\n            <h2 className=\"text-xl font-bold\">{symbol}</h2>\r\n            <p className=\"text-text-secondary\">{quote?.name || 'Loading...'}</p>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => window.open(`https://finance.yahoo.com/quote/${symbol}`, '_blank')}\r\n              className=\"p-2 text-text-secondary hover:text-accent transition-colors\"\r\n              title=\"View on Yahoo Finance\"\r\n            >\r\n              <ExternalLink className=\"h-5 w-5\" />\r\n            </button>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-text-secondary hover:text-text-primary transition-colors\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6\">\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <LoadingSpinner size=\"lg\" />\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"flex items-center justify-center h-64 text-error\">\r\n              {error}\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-6\">\r\n              {/* Price Section */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <div className=\"text-sm text-text-secondary\">Current Price</div>\r\n                  <div className=\"text-2xl font-bold\">${quote?.price?.toFixed(2) || 'N/A'}</div>\r\n                  <div className={`flex items-center gap-1 text-sm ${isPositive ? 'text-success' : 'text-error'}`}>\r\n                    {isPositive ? <TrendingUp className=\"h-4 w-4\" /> : <TrendingDown className=\"h-4 w-4\" />}\r\n                    <span>${Math.abs(quote?.change || 0).toFixed(2)}</span>\r\n                    <span>({Math.abs(quote?.changePercentage || 0).toFixed(2)}%)</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <div className=\"text-sm text-text-secondary\">Volume</div>\r\n                  <div className=\"text-lg font-semibold\">\r\n                    {quote?.volume?.toLocaleString() || 'N/A'}\r\n                  </div>\r\n                  <div className=\"text-sm text-text-secondary\">\r\n                    Shares traded today\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <div className=\"text-sm text-text-secondary\">Market Cap</div>\r\n                  <div className=\"text-lg font-semibold\">\r\n                    ${quote?.marketCap?.toLocaleString() || 'N/A'}\r\n                  </div>\r\n                  <div className=\"text-sm text-text-secondary\">\r\n                    Total market value\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Chart */}\r\n              <div className=\"bg-card rounded-lg p-4\">\r\n                <h3 className=\"text-lg font-semibold mb-4\">Price Chart (1 Month)</h3>\r\n                {renderChart()}\r\n              </div>\r\n\r\n              {/* Company Information */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n                    <Building2 className=\"h-5 w-5\" />\r\n                    Stock Information\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Symbol</div>\r\n                      <div className=\"font-medium\">{symbol}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Company Name</div>\r\n                      <div className=\"font-medium\">{quote?.name || 'N/A'}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Current Price</div>\r\n                      <div className=\"font-medium\">${quote?.price?.toFixed(2) || 'N/A'}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Daily Change</div>\r\n                      <div className={`font-medium ${isPositive ? 'text-success' : 'text-error'}`}>\r\n                        {isPositive ? '+' : ''}{quote?.change?.toFixed(2) || 'N/A'} ({quote?.changePercentage?.toFixed(2) || 'N/A'}%)\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-card rounded-lg p-4\">\r\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n                    <Globe className=\"h-5 w-5\" />\r\n                    Market Data\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Volume</div>\r\n                      <div className=\"font-medium\">{quote?.volume?.toLocaleString() || 'N/A'}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Market Cap</div>\r\n                      <div className=\"font-medium\">\r\n                        ${quote?.marketCap?.toLocaleString() || 'N/A'}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Data Source</div>\r\n                      <div className=\"font-medium\">Yahoo Finance</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm text-text-secondary\">Last Updated</div>\r\n                      <div className=\"font-medium\">{new Date().toLocaleString()}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAHA;;;;;AAuBO,SAAS,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAyB;;IACjF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,UAAU,QAAQ;gBACpB;YACF;QACF;qCAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,iBAAiB;QACrB,IAAI;YACF,aAAa;YACb,SAAS;YAET,MAAM,CAAC,WAAW,eAAe,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACpD,CAAA,GAAA,wIAAA,CAAA,gBAAa,AAAD,EAAE;gBACd,CAAA,GAAA,wIAAA,CAAA,oBAAiB,AAAD,EAAE,QAAQ;aAC3B;YAED,SAAS;YACT,aAAa,eAAe,GAAG,CAAC,CAAA,OAAQ,KAAK,KAAK;QACpD,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,aAAa,OAAO,SAAS,MAAM,MAAM,IAAI,IAAI;IAEvD,MAAM,cAAc;QAClB,IAAI,UAAU,MAAM,KAAK,GAAG;YAC1B,qBACE,6LAAC;gBAAI,WAAU;0BAA4D;;;;;;QAI/E;QAEA,MAAM,MAAM,KAAK,GAAG,IAAI;QACxB,MAAM,MAAM,KAAK,GAAG,IAAI;QACxB,MAAM,QAAQ,MAAM;QAEpB,IAAI,UAAU,GAAG;YACf,qBACE,6LAAC;gBAAI,WAAU;0BAA4D;;;;;;QAI/E;QAEA,qBACE,6LAAC;YACC,WAAU;YACV,SAAS,CAAC,IAAI,EAAE,UAAU,MAAM,GAAG,EAAE,CAAC,EAAE,OAAO;YAC/C,qBAAoB;sBAEpB,cAAA,6LAAC;gBACC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,UAC7B,KAAK,CAAC,GACN,GAAG,CAAC,CAAC,OAAO,IAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,KAAK,EAC7C,IAAI,CAAC,MAAM;gBACd,MAAK;gBACL,QAAQ,aAAa,YAAY;gBACjC,aAAY;gBACZ,cAAa;;;;;;;;;;;IAIrB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,6LAAC;oCAAE,WAAU;8CAAuB,OAAO,QAAQ;;;;;;;;;;;;sCAErD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,gCAAgC,EAAE,QAAQ,EAAE;oCACxE,WAAU;oCACV,OAAM;8CAEN,cAAA,6LAAC,yNAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;;;;;;8CAE1B,6LAAC;oCACC,SAAS;oCACT,WAAU;8CAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;8BAMnB,6LAAC;oBAAI,WAAU;8BACZ,0BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,mJAAA,CAAA,iBAAc;4BAAC,MAAK;;;;;;;;;;+BAErB,sBACF,6LAAC;wBAAI,WAAU;kCACZ;;;;;6CAGH,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DAA8B;;;;;;0DAC7C,6LAAC;gDAAI,WAAU;;oDAAqB;oDAAE,OAAO,OAAO,QAAQ,MAAM;;;;;;;0DAClE,6LAAC;gDAAI,WAAW,CAAC,gCAAgC,EAAE,aAAa,iBAAiB,cAAc;;oDAC5F,2BAAa,6LAAC,qNAAA,CAAA,aAAU;wDAAC,WAAU;;;;;6EAAe,6LAAC,yNAAA,CAAA,eAAY;wDAAC,WAAU;;;;;;kEAC3E,6LAAC;;4DAAK;4DAAE,KAAK,GAAG,CAAC,OAAO,UAAU,GAAG,OAAO,CAAC;;;;;;;kEAC7C,6LAAC;;4DAAK;4DAAE,KAAK,GAAG,CAAC,OAAO,oBAAoB,GAAG,OAAO,CAAC;4DAAG;;;;;;;;;;;;;;;;;;;kDAI9D,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DAA8B;;;;;;0DAC7C,6LAAC;gDAAI,WAAU;0DACZ,OAAO,QAAQ,oBAAoB;;;;;;0DAEtC,6LAAC;gDAAI,WAAU;0DAA8B;;;;;;;;;;;;kDAK/C,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DAA8B;;;;;;0DAC7C,6LAAC;gDAAI,WAAU;;oDAAwB;oDACnC,OAAO,WAAW,oBAAoB;;;;;;;0DAE1C,6LAAC;gDAAI,WAAU;0DAA8B;;;;;;;;;;;;;;;;;;0CAOjD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAA6B;;;;;;oCAC1C;;;;;;;0CAIH,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC,mNAAA,CAAA,YAAS;wDAAC,WAAU;;;;;;oDAAY;;;;;;;0DAGnC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;0EAAe;;;;;;;;;;;;kEAEhC,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;0EAAe,OAAO,QAAQ;;;;;;;;;;;;kEAE/C,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;;oEAAc;oEAAE,OAAO,OAAO,QAAQ,MAAM;;;;;;;;;;;;;kEAE7D,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAW,CAAC,YAAY,EAAE,aAAa,iBAAiB,cAAc;;oEACxE,aAAa,MAAM;oEAAI,OAAO,QAAQ,QAAQ,MAAM;oEAAM;oEAAG,OAAO,kBAAkB,QAAQ,MAAM;oEAAM;;;;;;;;;;;;;;;;;;;;;;;;;kDAMnH,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC,uMAAA,CAAA,QAAK;wDAAC,WAAU;;;;;;oDAAY;;;;;;;0DAG/B,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;0EAAe,OAAO,QAAQ,oBAAoB;;;;;;;;;;;;kEAEnE,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;;oEAAc;oEACzB,OAAO,WAAW,oBAAoB;;;;;;;;;;;;;kEAG5C,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;0EAAc;;;;;;;;;;;;kEAE/B,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;0EAA8B;;;;;;0EAC7C,6LAAC;gEAAI,WAAU;0EAAe,IAAI,OAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW7E;GAxNgB;KAAA"}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Bell } from \"lucide-react\";\r\nimport { SearchBar } from \"@/components/features/SearchBar\";\r\nimport { StockDetailModal } from \"@/components/features/StockDetailModal\";\r\n\r\nexport function Header() {\r\n  const [selectedStock, setSelectedStock] = useState<string | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleStockSelect = (symbol: string) => {\r\n    setSelectedStock(symbol);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedStock(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"fixed left-sidebar right-0 top-0 z-30 flex h-16 items-center border-b border-card bg-background px-4\">\r\n        <div className=\"flex flex-1 items-center\">\r\n          <SearchBar\r\n            onStockSelect={handleStockSelect}\r\n            placeholder=\"Search stocks, news, or settings...\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center\">\r\n          <button className=\"relative rounded-full p-2 text-text-secondary hover:bg-card hover:text-text-primary\">\r\n            <Bell className=\"h-5 w-5\" />\r\n            <span className=\"absolute right-1 top-1 h-2 w-2 rounded-full bg-accent\" />\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Stock Detail Modal */}\r\n      {selectedStock && (\r\n        <StockDetailModal\r\n          symbol={selectedStock}\r\n          isOpen={isModalOpen}\r\n          onClose={handleCloseModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAFA;;;AAHA;;;;;AAOO,SAAS;;IACd,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,oBAAoB,CAAC;QACzB,iBAAiB;QACjB,eAAe;IACjB;IAEA,MAAM,mBAAmB;QACvB,eAAe;QACf,iBAAiB;IACnB;IAEA,qBACE;;0BACE,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,8IAAA,CAAA,YAAS;4BACR,eAAe;4BACf,aAAY;;;;;;;;;;;kCAIhB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAO,WAAU;;8CAChB,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;8CAChB,6LAAC;oCAAK,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAMrB,+BACC,6LAAC,qJAAA,CAAA,mBAAgB;gBACf,QAAQ;gBACR,QAAQ;gBACR,SAAS;;;;;;;;AAKnB;GA1CgB;KAAA"}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/layout/Sidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Home, TrendingUp, PieChart, Settings, History } from \"lucide-react\";\r\n\r\nconst navigation = [\r\n  { name: \"Dashboard\", href: \"/\", icon: Home },\r\n  { name: \"Market\", href: \"/market\", icon: TrendingUp },\r\n  { name: \"Portfolio\", href: \"/portfolio\", icon: PieChart },\r\n  { name: \"History\", href: \"/history\", icon: History },\r\n  { name: \"Settings\", href: \"/settings\", icon: Settings },\r\n];\r\n\r\nexport function Sidebar() {\r\n  const pathname = usePathname();\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 z-40 h-screen w-sidebar border-r border-card bg-background\">\r\n      <div className=\"flex h-full flex-col px-3 py-4\">\r\n        {/* Logo */}\r\n        <div className=\"mb-10 flex items-center px-3\">\r\n          <span className=\"text-xl font-bold text-accent\">TradePro</span>\r\n        </div>\r\n\r\n        {/* Navigation */}\r\n        <nav className=\"flex-1 space-y-1\">\r\n          {navigation.map((item) => {\r\n            const isActive = pathname === item.href;\r\n            return (\r\n              <Link\r\n                key={item.name}\r\n                href={item.href}\r\n                className={`group flex items-center rounded-lg px-3 py-2 text-sm font-medium transition-colors ${\r\n                  isActive\r\n                    ? \"bg-card text-accent\"\r\n                    : \"text-text-secondary hover:bg-card hover:text-text-primary\"\r\n                }`}\r\n              >\r\n                <item.icon\r\n                  className={`mr-3 h-5 w-5 ${\r\n                    isActive ? \"text-accent\" : \"text-text-secondary group-hover:text-text-primary\"\r\n                  }`}\r\n                />\r\n                {item.name}\r\n              </Link>\r\n            );\r\n          })}\r\n        </nav>\r\n\r\n        {/* Premium Card */}\r\n        <div className=\"mt-auto space-y-4\">\r\n          <div className=\"bg-gradient-to-r from-pink-500 to-red-500 rounded-lg p-4 text-white\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <div className=\"text-lg\">👑</div>\r\n              <h3 className=\"font-semibold\">Upgrade to Premium</h3>\r\n            </div>\r\n            <p className=\"text-sm text-pink-100 mb-3\">\r\n              Get access to advanced analytics, real-time alerts, and premium features.\r\n            </p>\r\n            <button className=\"w-full bg-white text-red-500 py-2 px-3 rounded-lg text-sm font-medium hover:bg-pink-50 transition-colors\">\r\n              Upgrade Now\r\n            </button>\r\n          </div>\r\n\r\n          {/* Sign In */}\r\n          <button className=\"w-full bg-accent text-white py-2 px-3 rounded-lg text-sm font-medium hover:bg-accent/90 transition-colors flex items-center justify-center gap-2\">\r\n            <div className=\"text-lg\">⚡</div>\r\n            Sign in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAJA;;;;AAMA,MAAM,aAAa;IACjB;QAAE,MAAM;QAAa,MAAM;QAAK,MAAM,sMAAA,CAAA,OAAI;IAAC;IAC3C;QAAE,MAAM;QAAU,MAAM;QAAW,MAAM,qNAAA,CAAA,aAAU;IAAC;IACpD;QAAE,MAAM;QAAa,MAAM;QAAc,MAAM,iNAAA,CAAA,WAAQ;IAAC;IACxD;QAAE,MAAM;QAAW,MAAM;QAAY,MAAM,2MAAA,CAAA,UAAO;IAAC;IACnD;QAAE,MAAM;QAAY,MAAM;QAAa,MAAM,6MAAA,CAAA,WAAQ;IAAC;CACvD;AAEM,SAAS;;IACd,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAK,WAAU;kCAAgC;;;;;;;;;;;8BAIlD,6LAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC;wBACf,MAAM,WAAW,aAAa,KAAK,IAAI;wBACvC,qBACE,6LAAC,+JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,mFAAmF,EAC7F,WACI,wBACA,6DACJ;;8CAEF,6LAAC,KAAK,IAAI;oCACR,WAAW,CAAC,aAAa,EACvB,WAAW,gBAAgB,qDAC3B;;;;;;gCAEH,KAAK,IAAI;;2BAbL,KAAK,IAAI;;;;;oBAgBpB;;;;;;8BAIF,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAAU;;;;;;sDACzB,6LAAC;4CAAG,WAAU;sDAAgB;;;;;;;;;;;;8CAEhC,6LAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAG1C,6LAAC;oCAAO,WAAU;8CAA2G;;;;;;;;;;;;sCAM/H,6LAAC;4BAAO,WAAU;;8CAChB,6LAAC;oCAAI,WAAU;8CAAU;;;;;;gCAAO;;;;;;;;;;;;;;;;;;;;;;;;AAO5C;GA5DgB;;QACG,qIAAA,CAAA,cAAW;;;KADd"}},
    {"offset": {"line": 1372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/components/layout/Dashboard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\ninterface DashboardProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport function Dashboard({ children }: DashboardProps) {\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <Sidebar />\r\n      <Header />\r\n      <main className=\"ml-sidebar pt-16\">\r\n        <div className=\"mx-auto max-w-container p-section\">\r\n          {children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,UAAU,EAAE,QAAQ,EAAkB;IACpD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0IAAA,CAAA,UAAO;;;;;0BACR,6LAAC,yIAAA,CAAA,SAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;KAZgB"}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/temp/tradinglocal/jsprolocal/src/app/history/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Dashboard } from \"@/components/layout/Dashboard\";\r\nimport { ArrowUp, ArrowDown, DollarSign, TrendingUp, TrendingDown, Calendar, Filter } from \"lucide-react\";\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: 'buy' | 'sell' | 'deposit' | 'withdraw';\r\n  symbol?: string;\r\n  name?: string;\r\n  shares?: number;\r\n  price?: number;\r\n  amount: number;\r\n  timestamp: Date;\r\n  description: string;\r\n}\r\n\r\ninterface HistoryPageProps {}\r\n\r\nexport default function HistoryPage() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [filterType, setFilterType] = useState<'all' | 'buy' | 'sell' | 'deposit' | 'withdraw'>('all');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadTransactionHistory();\r\n  }, []);\r\n\r\n  const loadTransactionHistory = () => {\r\n    try {\r\n      const savedTransactions = localStorage.getItem('portfolioHistory');\r\n      if (savedTransactions) {\r\n        const parsedTransactions = JSON.parse(savedTransactions).map((t: any) => ({\r\n          ...t,\r\n          timestamp: new Date(t.timestamp)\r\n        }));\r\n        setTransactions(parsedTransactions);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading transaction history:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredTransactions = transactions.filter(transaction => {\r\n    if (filterType === 'all') return true;\r\n    return transaction.type === filterType;\r\n  });\r\n\r\n  const getTransactionIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'buy':\r\n        return <TrendingUp className=\"h-5 w-5 text-success\" />;\r\n      case 'sell':\r\n        return <TrendingDown className=\"h-5 w-5 text-error\" />;\r\n      case 'deposit':\r\n        return <ArrowUp className=\"h-5 w-5 text-success\" />;\r\n      case 'withdraw':\r\n        return <ArrowDown className=\"h-5 w-5 text-error\" />;\r\n      default:\r\n        return <DollarSign className=\"h-5 w-5 text-accent\" />;\r\n    }\r\n  };\r\n\r\n  const getTransactionColor = (type: string) => {\r\n    switch (type) {\r\n      case 'buy':\r\n      case 'deposit':\r\n        return 'text-success';\r\n      case 'sell':\r\n      case 'withdraw':\r\n        return 'text-error';\r\n      default:\r\n        return 'text-accent';\r\n    }\r\n  };\r\n\r\n  const formatDate = (date: Date) => {\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(date);\r\n  };\r\n\r\n  const getTotalStats = () => {\r\n    const stats = {\r\n      totalBuys: 0,\r\n      totalSells: 0,\r\n      totalDeposits: 0,\r\n      totalWithdrawals: 0,\r\n      netCashFlow: 0\r\n    };\r\n\r\n    transactions.forEach(transaction => {\r\n      switch (transaction.type) {\r\n        case 'buy':\r\n          stats.totalBuys += transaction.amount;\r\n          stats.netCashFlow -= transaction.amount;\r\n          break;\r\n        case 'sell':\r\n          stats.totalSells += transaction.amount;\r\n          stats.netCashFlow += transaction.amount;\r\n          break;\r\n        case 'deposit':\r\n          stats.totalDeposits += transaction.amount;\r\n          stats.netCashFlow += transaction.amount;\r\n          break;\r\n        case 'withdraw':\r\n          stats.totalWithdrawals += transaction.amount;\r\n          stats.netCashFlow -= transaction.amount;\r\n          break;\r\n      }\r\n    });\r\n\r\n    return stats;\r\n  };\r\n\r\n  const stats = getTotalStats();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Dashboard>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-text-secondary\">Loading transaction history...</div>\r\n        </div>\r\n      </Dashboard>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dashboard>\r\n      <div className=\"space-y-8\">\r\n        {/* Page Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold\">Transaction History</h1>\r\n            <p className=\"text-text-secondary\">Track all your portfolio activities</p>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Calendar className=\"h-5 w-5 text-text-secondary\" />\r\n            <span className=\"text-sm text-text-secondary\">\r\n              {transactions.length} transactions\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistics Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <TrendingUp className=\"h-5 w-5 text-success\" />\r\n              <h3 className=\"text-sm font-medium text-text-secondary\">Total Buys</h3>\r\n            </div>\r\n            <div className=\"text-2xl font-bold text-success\">${stats.totalBuys.toLocaleString()}</div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <TrendingDown className=\"h-5 w-5 text-error\" />\r\n              <h3 className=\"text-sm font-medium text-text-secondary\">Total Sells</h3>\r\n            </div>\r\n            <div className=\"text-2xl font-bold text-error\">${stats.totalSells.toLocaleString()}</div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <ArrowUp className=\"h-5 w-5 text-success\" />\r\n              <h3 className=\"text-sm font-medium text-text-secondary\">Total Deposits</h3>\r\n            </div>\r\n            <div className=\"text-2xl font-bold text-success\">${stats.totalDeposits.toLocaleString()}</div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <ArrowDown className=\"h-5 w-5 text-error\" />\r\n              <h3 className=\"text-sm font-medium text-text-secondary\">Total Withdrawals</h3>\r\n            </div>\r\n            <div className=\"text-2xl font-bold text-error\">${stats.totalWithdrawals.toLocaleString()}</div>\r\n          </div>\r\n          <div className=\"bg-card rounded-lg p-6\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <DollarSign className=\"h-5 w-5 text-accent\" />\r\n              <h3 className=\"text-sm font-medium text-text-secondary\">Net Cash Flow</h3>\r\n            </div>\r\n            <div className={`text-2xl font-bold ${stats.netCashFlow >= 0 ? 'text-success' : 'text-error'}`}>\r\n              {stats.netCashFlow >= 0 ? '+' : ''}${stats.netCashFlow.toLocaleString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filter Controls */}\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Filter className=\"h-4 w-4 text-text-secondary\" />\r\n            <span className=\"text-sm font-medium text-text-secondary\">Filter:</span>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            {(['all', 'buy', 'sell', 'deposit', 'withdraw'] as const).map((type) => (\r\n              <button\r\n                key={type}\r\n                onClick={() => setFilterType(type)}\r\n                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\r\n                  filterType === type\r\n                    ? 'bg-accent text-white'\r\n                    : 'bg-card text-text-secondary hover:bg-background'\r\n                }`}\r\n              >\r\n                {type.charAt(0).toUpperCase() + type.slice(1)}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Transactions List */}\r\n        <div className=\"bg-card rounded-lg overflow-hidden\">\r\n          {filteredTransactions.length === 0 ? (\r\n            <div className=\"p-8 text-center\">\r\n              <div className=\"text-4xl mb-4\">📊</div>\r\n              <h3 className=\"text-lg font-semibold mb-2\">No transactions found</h3>\r\n              <p className=\"text-text-secondary\">\r\n                {filterType === 'all' \r\n                  ? 'Start trading to see your transaction history here'\r\n                  : `No ${filterType} transactions found`\r\n                }\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-background\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                      Type\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                      Details\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                      Amount\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\r\n                      Date & Time\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-background\">\r\n                  {filteredTransactions.map((transaction) => (\r\n                    <tr key={transaction.id} className=\"hover:bg-background/50 transition-colors\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          {getTransactionIcon(transaction.type)}\r\n                          <div>\r\n                            <div className={`font-medium capitalize ${getTransactionColor(transaction.type)}`}>\r\n                              {transaction.type}\r\n                            </div>\r\n                            {transaction.symbol && (\r\n                              <div className=\"text-sm text-text-secondary\">{transaction.symbol}</div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div>\r\n                          <div className=\"font-medium text-text-primary\">{transaction.description}</div>\r\n                          {transaction.shares && transaction.price && (\r\n                            <div className=\"text-sm text-text-secondary\">\r\n                              {transaction.shares} shares @ ${transaction.price.toFixed(2)}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className={`text-lg font-semibold ${getTransactionColor(transaction.type)}`}>\r\n                          {transaction.type === 'buy' || transaction.type === 'withdraw' ? '-' : '+'}\r\n                          ${transaction.amount.toLocaleString()}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-text-secondary\">\r\n                        {formatDate(transaction.timestamp)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Dashboard>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}